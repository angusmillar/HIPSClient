//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIPSClient.Hips.HipsPCEHRService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientIdentifierBase", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Mrn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientMasterId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.StatePatientId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ValidatedIhi))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Demographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RegisteredEnterprisePatient))]
    internal partial class PatientIdentifierBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateOrganisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AlternateOrganisationName {
            get {
                return this.AlternateOrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateOrganisationNameField, value) != true)) {
                    this.AlternateOrganisationNameField = value;
                    this.RaisePropertyChanged("AlternateOrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HospitalCodeSystem {
            get {
                return this.HospitalCodeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeSystemField, value) != true)) {
                    this.HospitalCodeSystemField = value;
                    this.RaisePropertyChanged("HospitalCodeSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mrn", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    internal partial class Mrn : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientMasterId", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    internal partial class PatientMasterId : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HospitalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> HospitalId {
            get {
                return this.HospitalIdField;
            }
            set {
                if ((this.HospitalIdField.Equals(value) != true)) {
                    this.HospitalIdField = value;
                    this.RaisePropertyChanged("HospitalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatePatientId", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    internal partial class StatePatientId : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidatedIhi", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    internal partial class ValidatedIhi : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IhiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IhiLastValidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus IhiRecordStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.IhiStatus IhiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.SexEnumerator SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Ihi {
            get {
                return this.IhiField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiField, value) != true)) {
                    this.IhiField = value;
                    this.RaisePropertyChanged("Ihi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime IhiLastValidated {
            get {
                return this.IhiLastValidatedField;
            }
            set {
                if ((this.IhiLastValidatedField.Equals(value) != true)) {
                    this.IhiLastValidatedField = value;
                    this.RaisePropertyChanged("IhiLastValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus IhiRecordStatus {
            get {
                return this.IhiRecordStatusField;
            }
            set {
                if ((this.IhiRecordStatusField.Equals(value) != true)) {
                    this.IhiRecordStatusField = value;
                    this.RaisePropertyChanged("IhiRecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.IhiStatus IhiStatus {
            get {
                return this.IhiStatusField;
            }
            set {
                if ((this.IhiStatusField.Equals(value) != true)) {
                    this.IhiStatusField = value;
                    this.RaisePropertyChanged("IhiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.SexEnumerator Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Demographic", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    internal partial class Demographic : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DvaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareIrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.SexEnumerator SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DvaNumber {
            get {
                return this.DvaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DvaNumberField, value) != true)) {
                    this.DvaNumberField = value;
                    this.RaisePropertyChanged("DvaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MedicareIrn {
            get {
                return this.MedicareIrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareIrnField, value) != true)) {
                    this.MedicareIrnField = value;
                    this.RaisePropertyChanged("MedicareIrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MedicareNumber {
            get {
                return this.MedicareNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareNumberField, value) != true)) {
                    this.MedicareNumberField = value;
                    this.RaisePropertyChanged("MedicareNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.SexEnumerator Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisteredEnterprisePatient", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    internal partial class RegisteredEnterprisePatient : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatePatientIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StatePatientId {
            get {
                return this.StatePatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatePatientIdField, value) != true)) {
                    this.StatePatientIdField = value;
                    this.RaisePropertyChanged("StatePatientId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IhiRecordStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum IhiRecordStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unverified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provisional = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IhiStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum IhiStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deceased = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resolved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateIhi = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicatePatient = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeConflict = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceUnavailable = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareDvaChangeMismatch = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemographicMismatch = 105,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SexEnumerator", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum SexEnumerator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStatedOrInadequatelyDescribed = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntersexOrIndeterminate = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    [System.SerializableAttribute()]
    internal partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorisedEmployeeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HpiIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContractedServiceProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.UserRole RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorisedEmployeeUserId {
            get {
                return this.AuthorisedEmployeeUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorisedEmployeeUserIdField, value) != true)) {
                    this.AuthorisedEmployeeUserIdField = value;
                    this.RaisePropertyChanged("AuthorisedEmployeeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HpiI {
            get {
                return this.HpiIField;
            }
            set {
                if ((object.ReferenceEquals(this.HpiIField, value) != true)) {
                    this.HpiIField = value;
                    this.RaisePropertyChanged("HpiI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool IsContractedServiceProvider {
            get {
                return this.IsContractedServiceProviderField;
            }
            set {
                if ((this.IsContractedServiceProviderField.Equals(value) != true)) {
                    this.IsContractedServiceProviderField = value;
                    this.RaisePropertyChanged("IsContractedServiceProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    internal enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderIndividual = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteractiveUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorisedEmployee = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GainPcehrAccessResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class GainPcehrAccessResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessStatus AccessPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IHINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus IhiRecordStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.IhiStatus IhiStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessStatus AccessPermission {
            get {
                return this.AccessPermissionField;
            }
            set {
                if ((this.AccessPermissionField.Equals(value) != true)) {
                    this.AccessPermissionField = value;
                    this.RaisePropertyChanged("AccessPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string IHINumber {
            get {
                return this.IHINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IHINumberField, value) != true)) {
                    this.IHINumberField = value;
                    this.RaisePropertyChanged("IHINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus IhiRecordStatus {
            get {
                return this.IhiRecordStatusField;
            }
            set {
                if ((this.IhiRecordStatusField.Equals(value) != true)) {
                    this.IhiRecordStatusField = value;
                    this.RaisePropertyChanged("IhiRecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.IhiStatus IhiStatus {
            get {
                return this.IhiStatusField;
            }
            set {
                if ((this.IhiStatusField.Equals(value) != true)) {
                    this.IhiStatusField = value;
                    this.RaisePropertyChanged("IhiStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HipsResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    [System.SerializableAttribute()]
    internal partial class HipsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HipsErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponseIndicator StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HipsErrorMessage {
            get {
                return this.HipsErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsErrorMessageField, value) != true)) {
                    this.HipsErrorMessageField = value;
                    this.RaisePropertyChanged("HipsErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDescription {
            get {
                return this.ResponseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDescriptionField, value) != true)) {
                    this.ResponseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ResponseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDetails {
            get {
                return this.ResponseCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDetailsField, value) != true)) {
                    this.ResponseCodeDetailsField = value;
                    this.RaisePropertyChanged("ResponseCodeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponseIndicator Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GainPcehrAccessStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    internal enum GainPcehrAccessStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Permit = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deny = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HipsResponseIndicator", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    internal enum HipsResponseIndicator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPatient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidHospital = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEpisode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidDocument = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidUser = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HiServiceError = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrServiceError = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIhi = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsentWithdrawn = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CouldNotAddToQueue = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidAccessCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemographicMismatchWarning = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnresolvedIhiAlert = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseError = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidDateOfBirth = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrServiceWarning = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrServiceUnavailable = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientUnderAge = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CouldNotFindQueueItem = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectStatePatientId = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectMrn = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnresolvedHpiiAlert = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HpiiWarningRaised = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolvedHpii = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidHpii = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeHistoryViewResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class ChangeHistoryViewResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DocumentMetaDataItem[] DocumentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IhiNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DocumentMetaDataItem[] DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string IhiNumber {
            get {
                return this.IhiNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiNumberField, value) != true)) {
                    this.IhiNumberField = value;
                    this.RaisePropertyChanged("IhiNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifier {
            get {
                return this.PatientIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdentifierField, value) != true)) {
                    this.PatientIdentifierField = value;
                    this.RaisePropertyChanged("PatientIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentMetaDataItem", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class DocumentMetaDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorInstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorInstitutionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorPersonFamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorPersonGivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorPersonNamePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentEntryUuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DocumentStatus DocumentStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthCareFacilityTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthCareFacilityTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PracticeSettingTypesCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PracticeSettingTypesNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepositoryUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServiceStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServiceStopTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorInstitution {
            get {
                return this.AuthorInstitutionField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorInstitutionField, value) != true)) {
                    this.AuthorInstitutionField = value;
                    this.RaisePropertyChanged("AuthorInstitution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorInstitutionName {
            get {
                return this.AuthorInstitutionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorInstitutionNameField, value) != true)) {
                    this.AuthorInstitutionNameField = value;
                    this.RaisePropertyChanged("AuthorInstitutionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorPerson {
            get {
                return this.AuthorPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorPersonField, value) != true)) {
                    this.AuthorPersonField = value;
                    this.RaisePropertyChanged("AuthorPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorPersonFamilyName {
            get {
                return this.AuthorPersonFamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorPersonFamilyNameField, value) != true)) {
                    this.AuthorPersonFamilyNameField = value;
                    this.RaisePropertyChanged("AuthorPersonFamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorPersonGivenName {
            get {
                return this.AuthorPersonGivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorPersonGivenNameField, value) != true)) {
                    this.AuthorPersonGivenNameField = value;
                    this.RaisePropertyChanged("AuthorPersonGivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorPersonNamePrefix {
            get {
                return this.AuthorPersonNamePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorPersonNamePrefixField, value) != true)) {
                    this.AuthorPersonNamePrefixField = value;
                    this.RaisePropertyChanged("AuthorPersonNamePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentClassCode {
            get {
                return this.DocumentClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassCodeField, value) != true)) {
                    this.DocumentClassCodeField = value;
                    this.RaisePropertyChanged("DocumentClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentClassName {
            get {
                return this.DocumentClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassNameField, value) != true)) {
                    this.DocumentClassNameField = value;
                    this.RaisePropertyChanged("DocumentClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentEntryUuid {
            get {
                return this.DocumentEntryUuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentEntryUuidField, value) != true)) {
                    this.DocumentEntryUuidField = value;
                    this.RaisePropertyChanged("DocumentEntryUuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int DocumentSize {
            get {
                return this.DocumentSizeField;
            }
            set {
                if ((this.DocumentSizeField.Equals(value) != true)) {
                    this.DocumentSizeField = value;
                    this.RaisePropertyChanged("DocumentSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DocumentStatus DocumentStatusCode {
            get {
                return this.DocumentStatusCodeField;
            }
            set {
                if ((this.DocumentStatusCodeField.Equals(value) != true)) {
                    this.DocumentStatusCodeField = value;
                    this.RaisePropertyChanged("DocumentStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentUniqueId {
            get {
                return this.DocumentUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentUniqueIdField, value) != true)) {
                    this.DocumentUniqueIdField = value;
                    this.RaisePropertyChanged("DocumentUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FormatCode {
            get {
                return this.FormatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatCodeField, value) != true)) {
                    this.FormatCodeField = value;
                    this.RaisePropertyChanged("FormatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FormatName {
            get {
                return this.FormatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatNameField, value) != true)) {
                    this.FormatNameField = value;
                    this.RaisePropertyChanged("FormatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HealthCareFacilityTypeCode {
            get {
                return this.HealthCareFacilityTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthCareFacilityTypeCodeField, value) != true)) {
                    this.HealthCareFacilityTypeCodeField = value;
                    this.RaisePropertyChanged("HealthCareFacilityTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HealthCareFacilityTypeName {
            get {
                return this.HealthCareFacilityTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthCareFacilityTypeNameField, value) != true)) {
                    this.HealthCareFacilityTypeNameField = value;
                    this.RaisePropertyChanged("HealthCareFacilityTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PracticeSettingTypesCode {
            get {
                return this.PracticeSettingTypesCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeSettingTypesCodeField, value) != true)) {
                    this.PracticeSettingTypesCodeField = value;
                    this.RaisePropertyChanged("PracticeSettingTypesCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PracticeSettingTypesName {
            get {
                return this.PracticeSettingTypesNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeSettingTypesNameField, value) != true)) {
                    this.PracticeSettingTypesNameField = value;
                    this.RaisePropertyChanged("PracticeSettingTypesName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RepositoryUniqueId {
            get {
                return this.RepositoryUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryUniqueIdField, value) != true)) {
                    this.RepositoryUniqueIdField = value;
                    this.RaisePropertyChanged("RepositoryUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ServiceStartTime {
            get {
                return this.ServiceStartTimeField;
            }
            set {
                if ((this.ServiceStartTimeField.Equals(value) != true)) {
                    this.ServiceStartTimeField = value;
                    this.RaisePropertyChanged("ServiceStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ServiceStopTime {
            get {
                return this.ServiceStopTimeField;
            }
            set {
                if ((this.ServiceStopTimeField.Equals(value) != true)) {
                    this.ServiceStopTimeField = value;
                    this.RaisePropertyChanged("ServiceStopTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentStatus", Namespace="http://schemas.datacontract.org/2004/07/Nehta.VendorLibrary.PCEHR")]
    internal enum DocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Submitted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deprecated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentListResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class DocumentListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DocumentMetaDataItem[] DocumentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IhiNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DocumentMetaDataItem[] DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string IhiNumber {
            get {
                return this.IhiNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiNumberField, value) != true)) {
                    this.IhiNumberField = value;
                    this.RaisePropertyChanged("IhiNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifier {
            get {
                return this.PatientIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdentifierField, value) != true)) {
                    this.PatientIdentifierField = value;
                    this.RaisePropertyChanged("PatientIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentQuery", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class DocumentQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationTimeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ClassCodes[] DocumentClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DocumentStatus[] DocumentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FormatCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HealthcareFacilityTypeCodes[] HealthCareFacilityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PracticeSettingTypes[] PracticeSettingTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceStartTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceStartTimeToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceStopTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceStopTimeToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> CreationTimeFrom {
            get {
                return this.CreationTimeFromField;
            }
            set {
                if ((this.CreationTimeFromField.Equals(value) != true)) {
                    this.CreationTimeFromField = value;
                    this.RaisePropertyChanged("CreationTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> CreationTimeTo {
            get {
                return this.CreationTimeToField;
            }
            set {
                if ((this.CreationTimeToField.Equals(value) != true)) {
                    this.CreationTimeToField = value;
                    this.RaisePropertyChanged("CreationTimeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ClassCodes[] DocumentClassCode {
            get {
                return this.DocumentClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentClassCodeField, value) != true)) {
                    this.DocumentClassCodeField = value;
                    this.RaisePropertyChanged("DocumentClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DocumentStatus[] DocumentStatus {
            get {
                return this.DocumentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentStatusField, value) != true)) {
                    this.DocumentStatusField = value;
                    this.RaisePropertyChanged("DocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentUniqueId {
            get {
                return this.DocumentUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentUniqueIdField, value) != true)) {
                    this.DocumentUniqueIdField = value;
                    this.RaisePropertyChanged("DocumentUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] FormatCodes {
            get {
                return this.FormatCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatCodesField, value) != true)) {
                    this.FormatCodesField = value;
                    this.RaisePropertyChanged("FormatCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HealthcareFacilityTypeCodes[] HealthCareFacilityType {
            get {
                return this.HealthCareFacilityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthCareFacilityTypeField, value) != true)) {
                    this.HealthCareFacilityTypeField = value;
                    this.RaisePropertyChanged("HealthCareFacilityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PracticeSettingTypes[] PracticeSettingTypes {
            get {
                return this.PracticeSettingTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeSettingTypesField, value) != true)) {
                    this.PracticeSettingTypesField = value;
                    this.RaisePropertyChanged("PracticeSettingTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> ServiceStartTimeFrom {
            get {
                return this.ServiceStartTimeFromField;
            }
            set {
                if ((this.ServiceStartTimeFromField.Equals(value) != true)) {
                    this.ServiceStartTimeFromField = value;
                    this.RaisePropertyChanged("ServiceStartTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> ServiceStartTimeTo {
            get {
                return this.ServiceStartTimeToField;
            }
            set {
                if ((this.ServiceStartTimeToField.Equals(value) != true)) {
                    this.ServiceStartTimeToField = value;
                    this.RaisePropertyChanged("ServiceStartTimeTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> ServiceStopTimeFrom {
            get {
                return this.ServiceStopTimeFromField;
            }
            set {
                if ((this.ServiceStopTimeFromField.Equals(value) != true)) {
                    this.ServiceStopTimeFromField = value;
                    this.RaisePropertyChanged("ServiceStopTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> ServiceStopTimeTo {
            get {
                return this.ServiceStopTimeToField;
            }
            set {
                if ((this.ServiceStopTimeToField.Equals(value) != true)) {
                    this.ServiceStopTimeToField = value;
                    this.RaisePropertyChanged("ServiceStopTimeTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClassCodes", Namespace="http://schemas.datacontract.org/2004/07/Nehta.VendorLibrary.PCEHR")]
    internal enum ClassCodes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SharedHealthSummary = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        eReferral = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistLetter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DischargeSummary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventSummary = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PharmaceuticalBenefitsReport = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AustralianOrganDonorRegister = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AustralianChildhoodImmunisationRegister = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AustralianImmunisationRegister = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareDvaBenefitsReport = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrescriptionAndDispenseView = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthCheckScheduleView = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ObservationView = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareOverview = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareOverviewAll = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareOverviewPast12Months = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumerEnteredNotes = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumerEnteredHealthSummary = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceCareDirectiveCustodianRecord = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrPrescriptionRecord = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrDispenseRecord = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiagnosticImagingReport = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PathologyResultReport = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceCareInformation = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthCheckAssessment = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildParentQuestionnaire = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumerEnteredAchievements = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumerEnteredMeasurements = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirthDetails = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicinesView = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PharmacistSharedMedicinesList = 30,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthcareFacilityTypeCodes", Namespace="http://schemas.datacontract.org/2004/07/Nehta.VendorLibrary.PCEHR")]
    internal enum HealthcareFacilityTypeCodes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgedCareResidentialServices = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmbulanceServices = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCentreOperation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CentralGovernmentHealthcareAdministration = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildCareServices = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChiropracticAndOsteopathicServices = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerSystemDesignAndRelatedServices = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorporateHeadOfficeManagementServices = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataProcessingAndWebHostingServices = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalServices = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElectronicInformationStorageServices = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralHealthAdministration = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralPractice = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthAndFitnessCentresAndGymnasiaOperation = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthInsurance = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HigherEducation = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hospitals = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetServiceProvidersAndWebSearchPortals = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalGovernmentHealthcareAdministration = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MentalHealthHospitals = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OfficeAdministrativeServices = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OptometryAndOpticalDispensing = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherAlliedHealthServices = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherHealthcareServicesNEC = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherProfessionalScientificAndTechnicalServicesNEC = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherResidentialCareServices = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherSocialAssistanceServices = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PathologyAndDiagnosticImagingServices = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhysiotherapyServices = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProvisionAndAdministrationOfPublicHealthProgram = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RetailPharmacy = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScientificResearchServices = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistMedicalServices = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StateGovernmentHealthcareAdministration = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transport = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XXXXDONOTUSEXXXX = 35,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PracticeSettingTypes", Namespace="http://schemas.datacontract.org/2004/07/Nehta.VendorLibrary.PCEHR")]
    internal enum PracticeSettingTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcupunctureService = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdoptionService = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdultDayCareCentreOperation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AerialAmbulanceService = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgedCareAssistanceService = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlcoholicsAnonymousOperation = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllergySpecialistService = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmbulanceService = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnaesthetistService = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplicationHosting = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplicationServiceProvision = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AromatherapyService = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AudioAndVisualeMediaStreamingService = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AudiologyService = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomatedDataProcessingService = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BeforeAndOrAfterSchoolCareService = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingAndRecordKeepingService = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BloodBankOperation = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessAdministrativeService = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CharitableHostelsForTheAged = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildCareService = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildmindingService = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildrensHospital = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildrensNurseryOperation = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildrensPlayPrograms = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chiropractic = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClericalService = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClinicalPsychologyService = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollegesOfEducationOperation = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityHealthCare = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityHealthFacility = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityHealthFacilityMental = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityHealthFacilityOther = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityHealthFacilitySubstanceAbuse = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunityPharmacy = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerDataStorageAndRetrievalService = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerHardwareConsultingService = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerInputPreparationService = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerProgrammingService = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerSoftwareConsultingService = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerTimeLeasingOrRenting = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerTimeSharingService = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConservativeDentalService = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactLensDispensing = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorporateHeadOfficeManagement = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataCaptureImagingService = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataEntryService = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataProcessingComputerService = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayHospitalNec = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefenceForceHospital = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalHospitalOutPatient = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalHygieneService = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalInsuranceProvision = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalPracticeService = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalPractitionerService = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DentalSurgeryService = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DermatologyService = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiagnosticImagingService = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DieticianService = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisabilitiesAssistanceService = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiskAndDisketteConversionAndRecertificationService = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DivisionsOfGeneralPractice = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarNoseAndThroatHospital = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarNoseAndThroatSpecialistService = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElectronicDataProcessingService = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElectronicInformationStorageAndRetrievalService = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmergencyDepartmentServices = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndodonticService = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtendedAlliedHealthServices = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EyeHospital = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EyeTestingOptometrist = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FamilyDayCareService = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlyingDoctorService = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FuneralBenefitProvision = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralHealthAdministration = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralHospital = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralMedicalPractitionerService = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeneralPracticeMedicalClinicService = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GovernmentNursingHomeForTheAged = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GovernmentNursingHomeForYoungDisabled = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GynaecologyServices = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HairTransplantServiceByRegisteredMedicalPractitioner = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthAndFitnessCentresAndGymnasiaOperation = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthAssessmentService = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthInsuranceProvision = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HealthcareServiceNec = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HearingAidDispensing = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HerbalistService = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HomoeopathicService = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HospitalExceptPsychiatricOrVeterinaryHospitals = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HydropathicService = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InfectiousDiseasesHospitalIncludingHumanQuarantineStations = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetAccessProvision = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetAccessService = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetAndWebDesignConsultingService = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetSearchPortalOperation = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetSearchWebSiteOperation = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternetServiceProvision = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterpretationService = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalGovernmentHealthcareAdministration = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalGovernmentHostelForTheAged = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarriageGuidanceService = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaternityHospital = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicalLaboratoryService = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicalResearchService = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MicroficheOrMicrofilmRecordingAndImagingService = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MidwiferyService = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NaturopathicService = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeurologyService = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NursingService = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ObstetricsService = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ObstreticHospital = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OccupationalTherapyService = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OfficeAdministrativeServiceNEC = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperationOfSoupKitchenIncludingMobile = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OphthalmologyService = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpticalDispensing = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpticalScanningService = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpticianService = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OralPathologyService = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OralSurgeryService = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrthodonticService = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrthopaedicService = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrthopticService = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OsteopathicServices = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherCharitableHostel = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherCommonwealthHospital = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherLocalGovernmentHostel = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherStateGovernmentHostel = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaediatricService = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PathologyLaboratoryService = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayrollProcessing = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PedodonticsService = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodonticService = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PharmacyRetailOperation = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhysiotherapyServices = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PodiatryService = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PortalWebSearchOperation = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostgraduateSchoolUniversityOperation = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateNonProfitCommunityHealthCentre = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateAcuteCareHospital = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateAlcoholAndDrugTreatmentCentre = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateCharitableNursingHomeForTheAged = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateCharitableNursingHomeForYoungDisabled = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateDayCentreOrHospital = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateFreestandingDaySurgeryCentre = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateMentalHealthHospital = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateProfitNursingHomeForTheAged = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateProfitNursingHomeForYoungDisabled = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProfessionalScientificAndTechnicalServicesNEC = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProsthodonticsService = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProvisionAndAdministrationOfPublicHealthProgram = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PsychiatryService = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicAcuteCareHospital = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicAlcoholAndDrugTreatmentCentre = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicCommunityHealthCentre = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicDayCentreHospital = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicFreestandingDaySurgeryCentre = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicMentalHealthHospital = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceptionService = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResearchSchoolUniversityOperation = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RheumatologyService = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RuralGeneralMedicalPracticeService = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SocialScienceResearchService = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoftwareDevelopmentServiceExceptPublishing = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoftwareInstallationService = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistInstituteOrCollege = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistMedicalClinicService = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistMedicalPractitionerServiceNEC = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialistSurgicalService = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpectaclesDispensing = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeechPathologyService = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StateGovernmentHealthcareAdministration = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StateGovernmentHostelForTheAged = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubacuteHospitals = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemsAnalysisService = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TeachersCollegeOperation = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TelephoneAnsweringService = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TelephoneCallCentreOperation = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TherapeuticMassageService = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThoracicSpecialistService = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranslationService = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transport = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndergraduateSchoolUniversityOperation = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UniversityOperation = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrologyService = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeteransAffairsHospital = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoiceMailboxService = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebHosting = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebSearchPortalOperation = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WelfareCounsellingService = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WomensHospital = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRayClinicService = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YouthWelfareService = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TBD = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XXXXDONOTUSEXXXX = 195,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Attachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentMetaData LocalClinicalDocumentMetaDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Attachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentMetaData LocalClinicalDocumentMetaData {
            get {
                return this.LocalClinicalDocumentMetaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalClinicalDocumentMetaDataField, value) != true)) {
                    this.LocalClinicalDocumentMetaDataField = value;
                    this.RaisePropertyChanged("LocalClinicalDocumentMetaData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifier {
            get {
                return this.PatientIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdentifierField, value) != true)) {
                    this.PatientIdentifierField = value;
                    this.RaisePropertyChanged("PatientIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalClinicalDocumentMetaData", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class LocalClinicalDocumentMetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AdmissionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdmissionReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DischargeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleProviderFamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleProviderGivenNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleProviderSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleProviderTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.LocalDocumentStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SupersededDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UploadedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime AdmissionDate {
            get {
                return this.AdmissionDateField;
            }
            set {
                if ((this.AdmissionDateField.Equals(value) != true)) {
                    this.AdmissionDateField = value;
                    this.RaisePropertyChanged("AdmissionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AdmissionReason {
            get {
                return this.AdmissionReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmissionReasonField, value) != true)) {
                    this.AdmissionReasonField = value;
                    this.RaisePropertyChanged("AdmissionReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> DischargeDate {
            get {
                return this.DischargeDateField;
            }
            set {
                if ((this.DischargeDateField.Equals(value) != true)) {
                    this.DischargeDateField = value;
                    this.RaisePropertyChanged("DischargeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponsibleProviderFamilyName {
            get {
                return this.ResponsibleProviderFamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleProviderFamilyNameField, value) != true)) {
                    this.ResponsibleProviderFamilyNameField = value;
                    this.RaisePropertyChanged("ResponsibleProviderFamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponsibleProviderGivenNames {
            get {
                return this.ResponsibleProviderGivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleProviderGivenNamesField, value) != true)) {
                    this.ResponsibleProviderGivenNamesField = value;
                    this.RaisePropertyChanged("ResponsibleProviderGivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponsibleProviderSuffix {
            get {
                return this.ResponsibleProviderSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleProviderSuffixField, value) != true)) {
                    this.ResponsibleProviderSuffixField = value;
                    this.RaisePropertyChanged("ResponsibleProviderSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponsibleProviderTitle {
            get {
                return this.ResponsibleProviderTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleProviderTitleField, value) != true)) {
                    this.ResponsibleProviderTitleField = value;
                    this.RaisePropertyChanged("ResponsibleProviderTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SourceSystemDocumentId {
            get {
                return this.SourceSystemDocumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemDocumentIdField, value) != true)) {
                    this.SourceSystemDocumentIdField = value;
                    this.RaisePropertyChanged("SourceSystemDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SourceSystemSetId {
            get {
                return this.SourceSystemSetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemSetIdField, value) != true)) {
                    this.SourceSystemSetIdField = value;
                    this.RaisePropertyChanged("SourceSystemSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.LocalDocumentStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> SupersededDate {
            get {
                return this.SupersededDateField;
            }
            set {
                if ((this.SupersededDateField.Equals(value) != true)) {
                    this.SupersededDateField = value;
                    this.RaisePropertyChanged("SupersededDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> UploadedDate {
            get {
                return this.UploadedDateField;
            }
            set {
                if ((this.UploadedDateField.Equals(value) != true)) {
                    this.UploadedDateField = value;
                    this.RaisePropertyChanged("UploadedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] Contents {
            get {
                return this.ContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentsField, value) != true)) {
                    this.ContentsField = value;
                    this.RaisePropertyChanged("Contents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalDocumentStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    internal enum LocalDocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingUpload = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Uploaded = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailedUpload = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingRemove = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailedRemove = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewRequestBase", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PrescriptionAndDispenseViewRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MedicareOverviewViewRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyReportViewRequest))]
    internal partial class ViewRequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrescriptionAndDispenseViewRequest", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class PrescriptionAndDispenseViewRequest : HIPSClient.Hips.HipsPCEHRService.ViewRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicareOverviewViewRequest", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class MedicareOverviewViewRequest : HIPSClient.Hips.HipsPCEHRService.ViewRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathologyReportViewRequest", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class PathologyReportViewRequest : HIPSClient.Hips.HipsPCEHRService.ViewRequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewResponseBase", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ViewResponse))]
    internal partial class ViewResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class ViewResponse : HIPSClient.Hips.HipsPCEHRService.ViewResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Attachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Attachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateIdField, value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoesPcehrExistResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class DoesPcehrExistResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AccessCodeRequired AccessCodeRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PcehrExistsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AccessCodeRequired AccessCodeRequired {
            get {
                return this.AccessCodeRequiredField;
            }
            set {
                if ((this.AccessCodeRequiredField.Equals(value) != true)) {
                    this.AccessCodeRequiredField = value;
                    this.RaisePropertyChanged("AccessCodeRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<bool> PcehrExists {
            get {
                return this.PcehrExistsField;
            }
            set {
                if ((this.PcehrExistsField.Equals(value) != true)) {
                    this.PcehrExistsField = value;
                    this.RaisePropertyChanged("PcehrExists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessCodeRequired", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum AccessCodeRequired : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithCode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithoutCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessGranted = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalClinicalDocumentListResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class LocalClinicalDocumentListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentMetaData[] DocumentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentMetaData[] DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase PatientIdentifier {
            get {
                return this.PatientIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdentifierField, value) != true)) {
                    this.PatientIdentifierField = value;
                    this.RaisePropertyChanged("PatientIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HospitalIdentifier", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    [System.SerializableAttribute()]
    internal partial class HospitalIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HospitalCodeSystem {
            get {
                return this.HospitalCodeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeSystemField, value) != true)) {
                    this.HospitalCodeSystemField = value;
                    this.RaisePropertyChanged("HospitalCodeSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForceRefreshOption", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    internal enum ForceRefreshOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Never = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhenNotAdvertised = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Always = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientParticipationResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    [System.SerializableAttribute()]
    internal partial class PatientParticipationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus[] PatientParticipationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus[] PatientParticipationList {
            get {
                return this.PatientParticipationListField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientParticipationListField, value) != true)) {
                    this.PatientParticipationListField = value;
                    this.RaisePropertyChanged("PatientParticipationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientParticipationStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatusWithMedicareDva))]
    internal partial class PatientParticipationStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ParticipationStatus ParticipationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatePatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ValidatedIhi ValidatedIhiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ParticipationStatus ParticipationStatus {
            get {
                return this.ParticipationStatusField;
            }
            set {
                if ((this.ParticipationStatusField.Equals(value) != true)) {
                    this.ParticipationStatusField = value;
                    this.RaisePropertyChanged("ParticipationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StatePatientId {
            get {
                return this.StatePatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatePatientIdField, value) != true)) {
                    this.StatePatientIdField = value;
                    this.RaisePropertyChanged("StatePatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ValidatedIhi ValidatedIhi {
            get {
                return this.ValidatedIhiField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidatedIhiField, value) != true)) {
                    this.ValidatedIhiField = value;
                    this.RaisePropertyChanged("ValidatedIhi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientParticipationStatusWithMedicareDva", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    [System.SerializableAttribute()]
    internal partial class PatientParticipationStatusWithMedicareDva : HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DvaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareIrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DvaNumber {
            get {
                return this.DvaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DvaNumberField, value) != true)) {
                    this.DvaNumberField = value;
                    this.RaisePropertyChanged("DvaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MedicareIrn {
            get {
                return this.MedicareIrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareIrnField, value) != true)) {
                    this.MedicareIrnField = value;
                    this.RaisePropertyChanged("MedicareIrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MedicareNumber {
            get {
                return this.MedicareNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareNumberField, value) != true)) {
                    this.MedicareNumberField = value;
                    this.RaisePropertyChanged("MedicareNumber");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipationStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    internal enum ParticipationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoValidIhi = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrNotAdvertised = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrAdvertised = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestedUpload = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemovalReason", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum RemovalReason : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Withdrawn = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectIdentity = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentRequest", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class DocumentRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepositoryUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SaveDocumentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentUniqueId {
            get {
                return this.DocumentUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentUniqueIdField, value) != true)) {
                    this.DocumentUniqueIdField = value;
                    this.RaisePropertyChanged("DocumentUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RepositoryUniqueId {
            get {
                return this.RepositoryUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryUniqueIdField, value) != true)) {
                    this.RepositoryUniqueIdField = value;
                    this.RaisePropertyChanged("RepositoryUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool SaveDocument {
            get {
                return this.SaveDocumentField;
            }
            set {
                if ((this.SaveDocumentField.Equals(value) != true)) {
                    this.SaveDocumentField = value;
                    this.RaisePropertyChanged("SaveDocument");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class DocumentResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Attachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepositoryUniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Attachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentUniqueId {
            get {
                return this.DocumentUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentUniqueIdField, value) != true)) {
                    this.DocumentUniqueIdField = value;
                    this.RaisePropertyChanged("DocumentUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.HipsResponse HipsResponse {
            get {
                return this.HipsResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsResponseField, value) != true)) {
                    this.HipsResponseField = value;
                    this.RaisePropertyChanged("HipsResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RepositoryUniqueId {
            get {
                return this.RepositoryUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryUniqueIdField, value) != true)) {
                    this.RepositoryUniqueIdField = value;
                    this.RaisePropertyChanged("RepositoryUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientIdentifierBase", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Mrn1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.StatePatientId1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientMasterId1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ValidatedIhi1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RegisteredEnterprisePatient1))]
    internal partial class PatientIdentifierBase1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateOrganisationNameField;
        
        private string HospitalCodeField;
        
        private string HospitalCodeSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AlternateOrganisationName {
            get {
                return this.AlternateOrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateOrganisationNameField, value) != true)) {
                    this.AlternateOrganisationNameField = value;
                    this.RaisePropertyChanged("AlternateOrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string HospitalCodeSystem {
            get {
                return this.HospitalCodeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeSystemField, value) != true)) {
                    this.HospitalCodeSystemField = value;
                    this.RaisePropertyChanged("HospitalCodeSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mrn", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class Mrn1 : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatePatientId", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class StatePatientId1 : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientMasterId", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class PatientMasterId1 : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HospitalIdField;
        
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> HospitalId {
            get {
                return this.HospitalIdField;
            }
            set {
                if ((this.HospitalIdField.Equals(value) != true)) {
                    this.HospitalIdField = value;
                    this.RaisePropertyChanged("HospitalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidatedIhi", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ValidatedIhi1 : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 {
        
        private System.DateTime DateOfBirthField;
        
        private string FamilyNameField;
        
        private string GivenNamesField;
        
        private string IhiField;
        
        private System.DateTime IhiLastValidatedField;
        
        private HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus1 IhiRecordStatusField;
        
        private HIPSClient.Hips.HipsPCEHRService.IhiStatus1 IhiStatusField;
        
        private HIPSClient.Hips.HipsPCEHRService.Sex SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string GivenNames {
            get {
                return this.GivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNamesField, value) != true)) {
                    this.GivenNamesField = value;
                    this.RaisePropertyChanged("GivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Ihi {
            get {
                return this.IhiField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiField, value) != true)) {
                    this.IhiField = value;
                    this.RaisePropertyChanged("Ihi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal System.DateTime IhiLastValidated {
            get {
                return this.IhiLastValidatedField;
            }
            set {
                if ((this.IhiLastValidatedField.Equals(value) != true)) {
                    this.IhiLastValidatedField = value;
                    this.RaisePropertyChanged("IhiLastValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus1 IhiRecordStatus {
            get {
                return this.IhiRecordStatusField;
            }
            set {
                if ((this.IhiRecordStatusField.Equals(value) != true)) {
                    this.IhiRecordStatusField = value;
                    this.RaisePropertyChanged("IhiRecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.IhiStatus1 IhiStatus {
            get {
                return this.IhiStatusField;
            }
            set {
                if ((this.IhiStatusField.Equals(value) != true)) {
                    this.IhiStatusField = value;
                    this.RaisePropertyChanged("IhiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisteredEnterprisePatient", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class RegisteredEnterprisePatient1 : HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 {
        
        private string MrnField;
        
        private string StatePatientIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string StatePatientId {
            get {
                return this.StatePatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatePatientIdField, value) != true)) {
                    this.StatePatientIdField = value;
                    this.RaisePropertyChanged("StatePatientId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IhiRecordStatus", Namespace="http://nehta.hips/2014/03")]
    internal enum IhiRecordStatus1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unverified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provisional = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IhiStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common")]
    internal enum IhiStatus1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deceased = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resolved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateIhi = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicatePatient = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeConflict = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceUnavailable = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareDvaChangeMismatch = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemographicMismatch = 105,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sex", Namespace="http://nehta.hips/2014/03")]
    internal enum Sex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntersexOrIndeterminate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStatedOrInadequatelyDescribed = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBase", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ProviderUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ResponsibleUser))]
    internal partial class UserBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalUser", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class LocalUser : HIPSClient.Hips.HipsPCEHRService.UserBase {
        
        private string DomainField;
        
        private string FamilyNameField;
        
        private string GivenNamesField;
        
        private string LoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string GivenNames {
            get {
                return this.GivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNamesField, value) != true)) {
                    this.GivenNamesField = value;
                    this.RaisePropertyChanged("GivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderUser", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ProviderUser : HIPSClient.Hips.HipsPCEHRService.UserBase {
        
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNamesField;
        
        private string HpiIField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string GivenNames {
            get {
                return this.GivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNamesField, value) != true)) {
                    this.GivenNamesField = value;
                    this.RaisePropertyChanged("GivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string HpiI {
            get {
                return this.HpiIField;
            }
            set {
                if ((object.ReferenceEquals(this.HpiIField, value) != true)) {
                    this.HpiIField = value;
                    this.RaisePropertyChanged("HpiI");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponsibleUser", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ResponsibleUser : HIPSClient.Hips.HipsPCEHRService.UserBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HospitalIdentifier", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class HospitalIdentifier1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string HospitalCodeField;
        
        private string HospitalCodeSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string HospitalCodeSystem {
            get {
                return this.HospitalCodeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeSystemField, value) != true)) {
                    this.HospitalCodeSystemField = value;
                    this.RaisePropertyChanged("HospitalCodeSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForceRefreshOption", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common")]
    internal enum ForceRefreshOption1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Never = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhenNotAdvertised = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Always = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatus", Namespace="http://nehta.hips/2014/03")]
    internal enum ResponseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocumentVersion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocumentVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocument[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IhiStatus1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ParticipationStatus1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AttachmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.BaseSchema))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HipsObservableObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DateTimeOffset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IhiStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.SexEnumerator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AccessCodeRequired))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RemovalReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageQueueLeaseState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageQueueState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueueOperation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueueOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageQueueState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Mrn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientMasterId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.StatePatientId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ValidatedIhi))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Demographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RegisteredEnterprisePatient))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentStatus[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClassCodes[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClassCodes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HealthcareFacilityTypeCodes[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HealthcareFacilityTypeCodes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PracticeSettingTypes[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PracticeSettingTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ChangeHistoryViewResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentMetaDataItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentMetaDataItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Attachment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Attachment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentMetaData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalDocumentStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ViewRequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PrescriptionAndDispenseViewRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MedicareOverviewViewRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyReportViewRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ViewResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ViewResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DoesPcehrExistResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentMetaData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedOperationQueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedOperationsQueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.UserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.UserRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HipsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HipsResponseIndicator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientParticipationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ParticipationStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatusWithMedicareDva))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Mrn1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.StatePatientId1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientMasterId1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ValidatedIhi1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IhiRecordStatus1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Sex))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RegisteredEnterprisePatient1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.UserBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LocalUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ProviderUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ResponsibleUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ResponseStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Message[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.FaultBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HiServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CdaHeaderMetadata))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ParticipatingIndividual))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ModeOfSeparation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AddressPurpose))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AustralianState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationMedium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationUsage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.SourceDocumentStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CdaAttachment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CdaAttachment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CdaDocumentDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CdaDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AccessCodeRequired1))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyReport[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyTestReport[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyTestReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DiagnosticImagingReport[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DiagnosticImagingReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ImagingExaminationResult[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ImagingExaminationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HealthRecordOverview))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.NameTypeDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PathologyReportInformationDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CodedType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RequesterInformationDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IndividualProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.IndividualTypeSupp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.NameTypeSupp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AnatomicalSiteDetails[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AnatomicalSiteDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AnatomicalLocation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AnatomicalLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DiagnosticReportInformationDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.NewDocuments))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentDT[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.DocumentDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Link[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Link))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.LinkType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.RecentDocuments))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.SharedHealthSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.SharedHealthSummaryAtomicData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AdverseReactionsList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AdverseReaction[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AdverseReaction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.CodedType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InformationAvailableDTFlavor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Entitlement[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Entitlement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.TimeStampDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ImmunisationList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Immunisation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Immunisation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MedicalHistoryList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.OtherMedicalHistory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.OtherMedicalHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ProblemAndDiagnosis[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ProblemAndDiagnosis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Procedure[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Procedure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MedicinesList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Medicine[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.Medicine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MedicineDescription[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MedicineDescription))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.AddressTypeDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ContactDetailsDT[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ContactDetailsDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ViewMetaData))]
    internal partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DataField;
        
        private string DescriptionField;
        
        private HIPSClient.Hips.HipsPCEHRService.MessageLevel LevelField;
        
        private HIPSClient.Hips.HipsPCEHRService.Message[] MessagesField;
        
        private string OriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal object Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.MessageLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicalDocument", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas")]
    [System.SerializableAttribute()]
    internal partial class ClinicalDocument : HIPSClient.Hips.HipsPCEHRService.BaseSchema {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClinicalDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClinicalDocumentStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EpisodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemovalReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemovalReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RemovedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemSetIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> ClinicalDocumentId {
            get {
                return this.ClinicalDocumentIdField;
            }
            set {
                if ((this.ClinicalDocumentIdField.Equals(value) != true)) {
                    this.ClinicalDocumentIdField = value;
                    this.RaisePropertyChanged("ClinicalDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ClinicalDocumentStatusId {
            get {
                return this.ClinicalDocumentStatusIdField;
            }
            set {
                if ((this.ClinicalDocumentStatusIdField.Equals(value) != true)) {
                    this.ClinicalDocumentStatusIdField = value;
                    this.RaisePropertyChanged("ClinicalDocumentStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentTypeCode {
            get {
                return this.DocumentTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeCodeField, value) != true)) {
                    this.DocumentTypeCodeField = value;
                    this.RaisePropertyChanged("DocumentTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentTypeDescription {
            get {
                return this.DocumentTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeDescriptionField, value) != true)) {
                    this.DocumentTypeDescriptionField = value;
                    this.RaisePropertyChanged("DocumentTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int EpisodeId {
            get {
                return this.EpisodeIdField;
            }
            set {
                if ((this.EpisodeIdField.Equals(value) != true)) {
                    this.EpisodeIdField = value;
                    this.RaisePropertyChanged("EpisodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string RemovalReasonDescription {
            get {
                return this.RemovalReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RemovalReasonDescriptionField, value) != true)) {
                    this.RemovalReasonDescriptionField = value;
                    this.RaisePropertyChanged("RemovalReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int RemovalReasonId {
            get {
                return this.RemovalReasonIdField;
            }
            set {
                if ((this.RemovalReasonIdField.Equals(value) != true)) {
                    this.RemovalReasonIdField = value;
                    this.RaisePropertyChanged("RemovalReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> RemovedDate {
            get {
                return this.RemovedDateField;
            }
            set {
                if ((this.RemovedDateField.Equals(value) != true)) {
                    this.RemovedDateField = value;
                    this.RaisePropertyChanged("RemovedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SourceSystemSetId {
            get {
                return this.SourceSystemSetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemSetIdField, value) != true)) {
                    this.SourceSystemSetIdField = value;
                    this.RaisePropertyChanged("SourceSystemSetId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueuedPcehrOperation", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas")]
    [System.SerializableAttribute()]
    internal partial class QueuedPcehrOperation : HIPSClient.Hips.HipsPCEHRService.MessageQueue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AdmissionDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CDAPackageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentFormatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentFormatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EpisodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IhiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageQueueLeaseStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageQueueLeaseStateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageQueueStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageQueueStateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SystemEventLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemEventLogLevelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemEventLogLevelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemEventLogMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime AdmissionDateTime {
            get {
                return this.AdmissionDateTimeField;
            }
            set {
                if ((this.AdmissionDateTimeField.Equals(value) != true)) {
                    this.AdmissionDateTimeField = value;
                    this.RaisePropertyChanged("AdmissionDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long CDAPackageSize {
            get {
                return this.CDAPackageSizeField;
            }
            set {
                if ((this.CDAPackageSizeField.Equals(value) != true)) {
                    this.CDAPackageSizeField = value;
                    this.RaisePropertyChanged("CDAPackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentFormatCode {
            get {
                return this.DocumentFormatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentFormatCodeField, value) != true)) {
                    this.DocumentFormatCodeField = value;
                    this.RaisePropertyChanged("DocumentFormatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentFormatDescription {
            get {
                return this.DocumentFormatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentFormatDescriptionField, value) != true)) {
                    this.DocumentFormatDescriptionField = value;
                    this.RaisePropertyChanged("DocumentFormatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentTypeCode {
            get {
                return this.DocumentTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeCodeField, value) != true)) {
                    this.DocumentTypeCodeField = value;
                    this.RaisePropertyChanged("DocumentTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentTypeDescription {
            get {
                return this.DocumentTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeDescriptionField, value) != true)) {
                    this.DocumentTypeDescriptionField = value;
                    this.RaisePropertyChanged("DocumentTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int EpisodeId {
            get {
                return this.EpisodeIdField;
            }
            set {
                if ((this.EpisodeIdField.Equals(value) != true)) {
                    this.EpisodeIdField = value;
                    this.RaisePropertyChanged("EpisodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int FacilityId {
            get {
                return this.FacilityIdField;
            }
            set {
                if ((this.FacilityIdField.Equals(value) != true)) {
                    this.FacilityIdField = value;
                    this.RaisePropertyChanged("FacilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Ihi {
            get {
                return this.IhiField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiField, value) != true)) {
                    this.IhiField = value;
                    this.RaisePropertyChanged("Ihi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageQueueLeaseStateCode {
            get {
                return this.MessageQueueLeaseStateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageQueueLeaseStateCodeField, value) != true)) {
                    this.MessageQueueLeaseStateCodeField = value;
                    this.RaisePropertyChanged("MessageQueueLeaseStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageQueueLeaseStateDescription {
            get {
                return this.MessageQueueLeaseStateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageQueueLeaseStateDescriptionField, value) != true)) {
                    this.MessageQueueLeaseStateDescriptionField = value;
                    this.RaisePropertyChanged("MessageQueueLeaseStateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageQueueStateCode {
            get {
                return this.MessageQueueStateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageQueueStateCodeField, value) != true)) {
                    this.MessageQueueStateCodeField = value;
                    this.RaisePropertyChanged("MessageQueueStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageQueueStateDescription {
            get {
                return this.MessageQueueStateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageQueueStateDescriptionField, value) != true)) {
                    this.MessageQueueStateDescriptionField = value;
                    this.RaisePropertyChanged("MessageQueueStateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long RequestSize {
            get {
                return this.RequestSizeField;
            }
            set {
                if ((this.RequestSizeField.Equals(value) != true)) {
                    this.RequestSizeField = value;
                    this.RaisePropertyChanged("RequestSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SourceSystemDocumentId {
            get {
                return this.SourceSystemDocumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemDocumentIdField, value) != true)) {
                    this.SourceSystemDocumentIdField = value;
                    this.RaisePropertyChanged("SourceSystemDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SourceSystemSetId {
            get {
                return this.SourceSystemSetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemSetIdField, value) != true)) {
                    this.SourceSystemSetIdField = value;
                    this.RaisePropertyChanged("SourceSystemSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<long> SystemEventLogID {
            get {
                return this.SystemEventLogIDField;
            }
            set {
                if ((this.SystemEventLogIDField.Equals(value) != true)) {
                    this.SystemEventLogIDField = value;
                    this.RaisePropertyChanged("SystemEventLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SystemEventLogLevelCode {
            get {
                return this.SystemEventLogLevelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemEventLogLevelCodeField, value) != true)) {
                    this.SystemEventLogLevelCodeField = value;
                    this.RaisePropertyChanged("SystemEventLogLevelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SystemEventLogLevelDescription {
            get {
                return this.SystemEventLogLevelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemEventLogLevelDescriptionField, value) != true)) {
                    this.SystemEventLogLevelDescriptionField = value;
                    this.RaisePropertyChanged("SystemEventLogLevelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SystemEventLogMessage {
            get {
                return this.SystemEventLogMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemEventLogMessageField, value) != true)) {
                    this.SystemEventLogMessageField = value;
                    this.RaisePropertyChanged("SystemEventLogMessage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueue", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation))]
    internal partial class MessageQueue : HIPSClient.Hips.HipsPCEHRService.BaseSchema {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> BatchIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> BatchTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeaseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> LeaseExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> LeaseIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] MessageContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MessageQueueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.MessageQueueLeaseState MessageQueueLeaseStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.MessageQueueState MessageQueueStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> MetadataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueueNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> BatchIdentifier {
            get {
                return this.BatchIdentifierField;
            }
            set {
                if ((this.BatchIdentifierField.Equals(value) != true)) {
                    this.BatchIdentifierField = value;
                    this.RaisePropertyChanged("BatchIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string BatchOwner {
            get {
                return this.BatchOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchOwnerField, value) != true)) {
                    this.BatchOwnerField = value;
                    this.RaisePropertyChanged("BatchOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTimeOffset> BatchTimestamp {
            get {
                return this.BatchTimestampField;
            }
            set {
                if ((this.BatchTimestampField.Equals(value) != true)) {
                    this.BatchTimestampField = value;
                    this.RaisePropertyChanged("BatchTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int LeaseCount {
            get {
                return this.LeaseCountField;
            }
            set {
                if ((this.LeaseCountField.Equals(value) != true)) {
                    this.LeaseCountField = value;
                    this.RaisePropertyChanged("LeaseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTimeOffset> LeaseExpiry {
            get {
                return this.LeaseExpiryField;
            }
            set {
                if ((this.LeaseExpiryField.Equals(value) != true)) {
                    this.LeaseExpiryField = value;
                    this.RaisePropertyChanged("LeaseExpiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.Guid> LeaseIdentifier {
            get {
                return this.LeaseIdentifierField;
            }
            set {
                if ((this.LeaseIdentifierField.Equals(value) != true)) {
                    this.LeaseIdentifierField = value;
                    this.RaisePropertyChanged("LeaseIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] MessageContent {
            get {
                return this.MessageContentField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageContentField, value) != true)) {
                    this.MessageContentField = value;
                    this.RaisePropertyChanged("MessageContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<long> MessageQueueID {
            get {
                return this.MessageQueueIDField;
            }
            set {
                if ((this.MessageQueueIDField.Equals(value) != true)) {
                    this.MessageQueueIDField = value;
                    this.RaisePropertyChanged("MessageQueueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.MessageQueueLeaseState MessageQueueLeaseStateID {
            get {
                return this.MessageQueueLeaseStateIDField;
            }
            set {
                if ((this.MessageQueueLeaseStateIDField.Equals(value) != true)) {
                    this.MessageQueueLeaseStateIDField = value;
                    this.RaisePropertyChanged("MessageQueueLeaseStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.MessageQueueState MessageQueueStateID {
            get {
                return this.MessageQueueStateIDField;
            }
            set {
                if ((this.MessageQueueStateIDField.Equals(value) != true)) {
                    this.MessageQueueStateIDField = value;
                    this.RaisePropertyChanged("MessageQueueStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeField, value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.Generic.Dictionary<string, string> Metadata {
            get {
                return this.MetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataField, value) != true)) {
                    this.MetadataField = value;
                    this.RaisePropertyChanged("Metadata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string OrderKey {
            get {
                return this.OrderKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderKeyField, value) != true)) {
                    this.OrderKeyField = value;
                    this.RaisePropertyChanged("OrderKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string QueueName {
            get {
                return this.QueueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QueueNameField, value) != true)) {
                    this.QueueNameField = value;
                    this.RaisePropertyChanged("QueueName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicalDocumentVersion", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas")]
    [System.SerializableAttribute()]
    internal partial class ClinicalDocumentVersion : HIPSClient.Hips.HipsPCEHRService.BaseSchema {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClinicalDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClinicalDocumentVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceSystemDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SupersededDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UploadedDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ClinicalDocumentId {
            get {
                return this.ClinicalDocumentIdField;
            }
            set {
                if ((this.ClinicalDocumentIdField.Equals(value) != true)) {
                    this.ClinicalDocumentIdField = value;
                    this.RaisePropertyChanged("ClinicalDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> ClinicalDocumentVersionId {
            get {
                return this.ClinicalDocumentVersionIdField;
            }
            set {
                if ((this.ClinicalDocumentVersionIdField.Equals(value) != true)) {
                    this.ClinicalDocumentVersionIdField = value;
                    this.RaisePropertyChanged("ClinicalDocumentVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] Package {
            get {
                return this.PackageField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageField, value) != true)) {
                    this.PackageField = value;
                    this.RaisePropertyChanged("Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SourceSystemDocumentId {
            get {
                return this.SourceSystemDocumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSystemDocumentIdField, value) != true)) {
                    this.SourceSystemDocumentIdField = value;
                    this.RaisePropertyChanged("SourceSystemDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> SupersededDate {
            get {
                return this.SupersededDateField;
            }
            set {
                if ((this.SupersededDateField.Equals(value) != true)) {
                    this.SupersededDateField = value;
                    this.RaisePropertyChanged("SupersededDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> UploadedDate {
            get {
                return this.UploadedDateField;
            }
            set {
                if ((this.UploadedDateField.Equals(value) != true)) {
                    this.UploadedDateField = value;
                    this.RaisePropertyChanged("UploadedDate");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipationStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common")]
    internal enum ParticipationStatus1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoValidIhi = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrNotAdvertised = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrAdvertised = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestedUpload = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentType", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common")]
    internal enum AttachmentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedImageJpeg = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedImagePng = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedImageTiff = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedImageGif = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttachedDocumentPdf = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrganisationalLogoPng = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientParticipationStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO")]
    [System.SerializableAttribute()]
    internal partial class PatientParticipationStatus1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ParticipationStatus1 ParticipationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatePatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ValidatedIhi1 ValidatedIhiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ParticipationStatus1 ParticipationStatus {
            get {
                return this.ParticipationStatusField;
            }
            set {
                if ((this.ParticipationStatusField.Equals(value) != true)) {
                    this.ParticipationStatusField = value;
                    this.RaisePropertyChanged("ParticipationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StatePatientId {
            get {
                return this.StatePatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatePatientIdField, value) != true)) {
                    this.StatePatientIdField = value;
                    this.RaisePropertyChanged("StatePatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ValidatedIhi1 ValidatedIhi {
            get {
                return this.ValidatedIhiField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidatedIhiField, value) != true)) {
                    this.ValidatedIhiField = value;
                    this.RaisePropertyChanged("ValidatedIhi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsPcehrAdvertisedLocal", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO")]
    [System.SerializableAttribute()]
    internal partial class IsPcehrAdvertisedLocal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AccessCodeRequired1 AccessCodeRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PcehrExistsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AccessCodeRequired1 AccessCodeRequired {
            get {
                return this.AccessCodeRequiredField;
            }
            set {
                if ((this.AccessCodeRequiredField.Equals(value) != true)) {
                    this.AccessCodeRequiredField = value;
                    this.RaisePropertyChanged("AccessCodeRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<bool> PcehrExists {
            get {
                return this.PcehrExistsField;
            }
            set {
                if ((this.PcehrExistsField.Equals(value) != true)) {
                    this.PcehrExistsField = value;
                    this.RaisePropertyChanged("PcehrExists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseSchema", Namespace="http://schemas.datacontract.org/2004/07/HIPS.Base.Schemas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocumentVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocument))]
    internal partial class BaseSchema : HIPSClient.Hips.HipsPCEHRService.HipsObservableObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserModifiedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string UserCreated {
            get {
                return this.UserCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCreatedField, value) != true)) {
                    this.UserCreatedField = value;
                    this.RaisePropertyChanged("UserCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string UserModified {
            get {
                return this.UserModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.UserModifiedField, value) != true)) {
                    this.UserModifiedField = value;
                    this.RaisePropertyChanged("UserModified");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HipsObservableObject", Namespace="http://schemas.datacontract.org/2004/07/HIPS.Base.Schemas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.BaseSchema))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.MessageQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocumentVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ClinicalDocument))]
    internal partial class HipsObservableObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDirtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool IsDirty {
            get {
                return this.IsDirtyField;
            }
            set {
                if ((this.IsDirtyField.Equals(value) != true)) {
                    this.IsDirtyField = value;
                    this.RaisePropertyChanged("IsDirty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueueLeaseState", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum MessageQueueLeaseState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retrying = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageQueueState", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum MessageQueueState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueOperation", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    internal enum QueueOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UploadOrSupersede = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Remove = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueuedOperationQueryResult", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class QueuedOperationQueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private HIPSClient.Hips.HipsPCEHRService.ClinicalDocument ClinicalDocumentField;
        
        private byte[] DecodedPackageField;
        
        private HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation QueuedOperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ClinicalDocument ClinicalDocument {
            get {
                return this.ClinicalDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalDocumentField, value) != true)) {
                    this.ClinicalDocumentField = value;
                    this.RaisePropertyChanged("ClinicalDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal byte[] DecodedPackage {
            get {
                return this.DecodedPackageField;
            }
            set {
                if ((object.ReferenceEquals(this.DecodedPackageField, value) != true)) {
                    this.DecodedPackageField = value;
                    this.RaisePropertyChanged("DecodedPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation QueuedOperation {
            get {
                return this.QueuedOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.QueuedOperationField, value) != true)) {
                    this.QueuedOperationField = value;
                    this.RaisePropertyChanged("QueuedOperation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueuedOperationsQueryResult", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrSchemas")]
    [System.SerializableAttribute()]
    internal partial class QueuedOperationsQueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation[] QueuedOperationsField;
        
        private HIPSClient.Hips.HipsPCEHRService.ClinicalDocumentVersion[] UploadedDocumentVersionsField;
        
        private HIPSClient.Hips.HipsPCEHRService.ClinicalDocument[] UploadedDocumentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation[] QueuedOperations {
            get {
                return this.QueuedOperationsField;
            }
            set {
                if ((object.ReferenceEquals(this.QueuedOperationsField, value) != true)) {
                    this.QueuedOperationsField = value;
                    this.RaisePropertyChanged("QueuedOperations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ClinicalDocumentVersion[] UploadedDocumentVersions {
            get {
                return this.UploadedDocumentVersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadedDocumentVersionsField, value) != true)) {
                    this.UploadedDocumentVersionsField = value;
                    this.RaisePropertyChanged("UploadedDocumentVersions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ClinicalDocument[] UploadedDocuments {
            get {
                return this.UploadedDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadedDocumentsField, value) != true)) {
                    this.UploadedDocumentsField = value;
                    this.RaisePropertyChanged("UploadedDocuments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageLevel", Namespace="http://nehta.hips/2014/03")]
    internal enum MessageLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class InvalidRequestFault : HIPSClient.Hips.HipsPCEHRService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Message[] MessagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultBase", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HiServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault))]
    internal partial class FaultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FaultIdentifier {
            get {
                return this.FaultIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultIdentifierField, value) != true)) {
                    this.FaultIdentifierField = value;
                    this.RaisePropertyChanged("FaultIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ServiceOperationFault : HIPSClient.Hips.HipsPCEHRService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class InvalidUserFault : HIPSClient.Hips.HipsPCEHRService.FaultBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class HiServiceFault : HIPSClient.Hips.HipsPCEHRService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDescription {
            get {
                return this.ResponseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDescriptionField, value) != true)) {
                    this.ResponseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ResponseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDetails {
            get {
                return this.ResponseCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDetailsField, value) != true)) {
                    this.ResponseCodeDetailsField = value;
                    this.RaisePropertyChanged("ResponseCodeDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class PcehrServiceFault : HIPSClient.Hips.HipsPCEHRService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDescription {
            get {
                return this.ResponseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDescriptionField, value) != true)) {
                    this.ResponseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ResponseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDetails {
            get {
                return this.ResponseCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDetailsField, value) != true)) {
                    this.ResponseCodeDetailsField = value;
                    this.RaisePropertyChanged("ResponseCodeDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ItemNotFoundFault : HIPSClient.Hips.HipsPCEHRService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualifierField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Qualifier {
            get {
                return this.QualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifierField, value) != true)) {
                    this.QualifierField = value;
                    this.RaisePropertyChanged("Qualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CdaHeaderMetadata", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class CdaHeaderMetadata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime AdmissionDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DischargeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DischargeDateTimeField;
        
        private HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider DocumentAuthorField;
        
        private System.DateTime DocumentCreationDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider LegalAuthenticatorField;
        
        private HIPSClient.Hips.HipsPCEHRService.ModeOfSeparation ModeOfSeparationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Address PatientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationDetail PatientContactDetailsField;
        
        private HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider ResponsibleHealthProfessionalField;
        
        private HIPSClient.Hips.HipsPCEHRService.SourceDocumentStatus SourceDocumentStatusField;
        
        private string SpecialtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal System.DateTime AdmissionDateTime {
            get {
                return this.AdmissionDateTimeField;
            }
            set {
                if ((this.AdmissionDateTimeField.Equals(value) != true)) {
                    this.AdmissionDateTimeField = value;
                    this.RaisePropertyChanged("AdmissionDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> DischargeDate {
            get {
                return this.DischargeDateField;
            }
            set {
                if ((this.DischargeDateField.Equals(value) != true)) {
                    this.DischargeDateField = value;
                    this.RaisePropertyChanged("DischargeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> DischargeDateTime {
            get {
                return this.DischargeDateTimeField;
            }
            set {
                if ((this.DischargeDateTimeField.Equals(value) != true)) {
                    this.DischargeDateTimeField = value;
                    this.RaisePropertyChanged("DischargeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider DocumentAuthor {
            get {
                return this.DocumentAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentAuthorField, value) != true)) {
                    this.DocumentAuthorField = value;
                    this.RaisePropertyChanged("DocumentAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal System.DateTime DocumentCreationDateTime {
            get {
                return this.DocumentCreationDateTimeField;
            }
            set {
                if ((this.DocumentCreationDateTimeField.Equals(value) != true)) {
                    this.DocumentCreationDateTimeField = value;
                    this.RaisePropertyChanged("DocumentCreationDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider LegalAuthenticator {
            get {
                return this.LegalAuthenticatorField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalAuthenticatorField, value) != true)) {
                    this.LegalAuthenticatorField = value;
                    this.RaisePropertyChanged("LegalAuthenticator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ModeOfSeparation ModeOfSeparation {
            get {
                return this.ModeOfSeparationField;
            }
            set {
                if ((this.ModeOfSeparationField.Equals(value) != true)) {
                    this.ModeOfSeparationField = value;
                    this.RaisePropertyChanged("ModeOfSeparation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Address PatientAddress {
            get {
                return this.PatientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAddressField, value) != true)) {
                    this.PatientAddressField = value;
                    this.RaisePropertyChanged("PatientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationDetail PatientContactDetails {
            get {
                return this.PatientContactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientContactDetailsField, value) != true)) {
                    this.PatientContactDetailsField = value;
                    this.RaisePropertyChanged("PatientContactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider ResponsibleHealthProfessional {
            get {
                return this.ResponsibleHealthProfessionalField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleHealthProfessionalField, value) != true)) {
                    this.ResponsibleHealthProfessionalField = value;
                    this.RaisePropertyChanged("ResponsibleHealthProfessional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.SourceDocumentStatus SourceDocumentStatus {
            get {
                return this.SourceDocumentStatusField;
            }
            set {
                if ((this.SourceDocumentStatusField.Equals(value) != true)) {
                    this.SourceDocumentStatusField = value;
                    this.RaisePropertyChanged("SourceDocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipatingProvider", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ParticipatingProvider : HIPSClient.Hips.HipsPCEHRService.ParticipatingIndividual {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerHpioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HpiiField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string EmployerHpio {
            get {
                return this.EmployerHpioField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerHpioField, value) != true)) {
                    this.EmployerHpioField = value;
                    this.RaisePropertyChanged("EmployerHpio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string EmployerName {
            get {
                return this.EmployerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerNameField, value) != true)) {
                    this.EmployerNameField = value;
                    this.RaisePropertyChanged("EmployerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Hpii {
            get {
                return this.HpiiField;
            }
            set {
                if ((object.ReferenceEquals(this.HpiiField, value) != true)) {
                    this.HpiiField = value;
                    this.RaisePropertyChanged("Hpii");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipatingIndividual", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ParticipatingProvider))]
    internal partial class ParticipatingIndividual : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FamilyNameField;
        
        private string GivenNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string GivenNames {
            get {
                return this.GivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNamesField, value) != true)) {
                    this.GivenNamesField = value;
                    this.RaisePropertyChanged("GivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LocalIdentifier {
            get {
                return this.LocalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIdentifierField, value) != true)) {
                    this.LocalIdentifierField = value;
                    this.RaisePropertyChanged("LocalIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModeOfSeparation", Namespace="http://nehta.hips/2014/03")]
    internal enum ModeOfSeparation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcuteHospital = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgedCareService = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PsychiatricCare = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherHealthService = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdministrativeDischarge = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelfDischarge = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdministrativeFromLeave = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deceased = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        private HIPSClient.Hips.HipsPCEHRService.AddressPurpose AddressPurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AustralianState AustralianStateField;
        
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternationalStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.AddressPurpose AddressPurpose {
            get {
                return this.AddressPurposeField;
            }
            set {
                if ((this.AddressPurposeField.Equals(value) != true)) {
                    this.AddressPurposeField = value;
                    this.RaisePropertyChanged("AddressPurpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AustralianState AustralianState {
            get {
                return this.AustralianStateField;
            }
            set {
                if ((this.AustralianStateField.Equals(value) != true)) {
                    this.AustralianStateField = value;
                    this.RaisePropertyChanged("AustralianState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string InternationalStateCode {
            get {
                return this.InternationalStateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InternationalStateCodeField, value) != true)) {
                    this.InternationalStateCodeField = value;
                    this.RaisePropertyChanged("InternationalStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PlaceName {
            get {
                return this.PlaceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceNameField, value) != true)) {
                    this.PlaceNameField = value;
                    this.RaisePropertyChanged("PlaceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressPurpose", Namespace="http://nehta.hips/2014/03")]
    internal enum AddressPurpose : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Business = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mailing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Temporary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Residential = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AustralianState", Namespace="http://nehta.hips/2014/03")]
    internal enum AustralianState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NSW = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VIC = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QLD = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WA = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TAS = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NT = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACT = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        U = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectronicCommunicationDetail", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ElectronicCommunicationDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DetailField;
        
        private HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationMedium MediumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationUsage UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Detail {
            get {
                return this.DetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailField, value) != true)) {
                    this.DetailField = value;
                    this.RaisePropertyChanged("Detail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationMedium Medium {
            get {
                return this.MediumField;
            }
            set {
                if ((this.MediumField.Equals(value) != true)) {
                    this.MediumField = value;
                    this.RaisePropertyChanged("Medium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ElectronicCommunicationUsage Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((this.UsageField.Equals(value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectronicCommunicationMedium", Namespace="http://nehta.hips/2014/03")]
    internal enum ElectronicCommunicationMedium : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedTelephone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pager = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        URL = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectronicCommunicationUsage", Namespace="http://nehta.hips/2014/03")]
    internal enum ElectronicCommunicationUsage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Business = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Personal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceDocumentStatus", Namespace="http://nehta.hips/2014/03")]
    internal enum SourceDocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Interim = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Final = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Withdrawn = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CdaAttachment", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class CdaAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private HIPSClient.Hips.HipsPCEHRService.AttachmentType AttachmentTypeField;
        
        private string CaptionField;
        
        private byte[] ContentField;
        
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.AttachmentType AttachmentType {
            get {
                return this.AttachmentTypeField;
            }
            set {
                if ((this.AttachmentTypeField.Equals(value) != true)) {
                    this.AttachmentTypeField = value;
                    this.RaisePropertyChanged("AttachmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CdaDocumentDetails", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class CdaDocumentDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private HIPSClient.Hips.HipsPCEHRService.CdaDocument DocumentField;
        
        private string DocumentIdField;
        
        private string DocumentSetIdField;
        
        private string MrnField;
        
        private HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.CdaDocument Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIdField, value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string DocumentSetId {
            get {
                return this.DocumentSetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentSetIdField, value) != true)) {
                    this.DocumentSetIdField = value;
                    this.RaisePropertyChanged("DocumentSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier {
            get {
                return this.PatientIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdentifierField, value) != true)) {
                    this.PatientIdentifierField = value;
                    this.RaisePropertyChanged("PatientIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CdaDocument", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class CdaDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private HIPSClient.Hips.HipsPCEHRService.CdaAttachment[] AttachmentsField;
        
        private byte[] ContentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPCEHRService.CdaAttachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessCodeRequired", Namespace="http://nehta.hips/2014/03")]
    internal enum AccessCodeRequired1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithCode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithoutCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessGranted = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathologyReport", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class PathologyReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT ClinicalDocumentAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAvailableToConsumerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PathologyReportInformationDT ReportInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT ReportingPathologistInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.RequesterInformationDT TestRequesterInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.PathologyTestReport[] TestResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT ClinicalDocumentAuthor {
            get {
                return this.ClinicalDocumentAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalDocumentAuthorField, value) != true)) {
                    this.ClinicalDocumentAuthorField = value;
                    this.RaisePropertyChanged("ClinicalDocumentAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateAvailableToConsumer {
            get {
                return this.DateAvailableToConsumerField;
            }
            set {
                if ((this.DateAvailableToConsumerField.Equals(value) != true)) {
                    this.DateAvailableToConsumerField = value;
                    this.RaisePropertyChanged("DateAvailableToConsumer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PathologyReportInformationDT ReportInformation {
            get {
                return this.ReportInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportInformationField, value) != true)) {
                    this.ReportInformationField = value;
                    this.RaisePropertyChanged("ReportInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT ReportingPathologistInformation {
            get {
                return this.ReportingPathologistInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportingPathologistInformationField, value) != true)) {
                    this.ReportingPathologistInformationField = value;
                    this.RaisePropertyChanged("ReportingPathologistInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.RequesterInformationDT TestRequesterInformation {
            get {
                return this.TestRequesterInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.TestRequesterInformationField, value) != true)) {
                    this.TestRequesterInformationField = value;
                    this.RaisePropertyChanged("TestRequesterInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.PathologyTestReport[] TestResults {
            get {
                return this.TestResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.TestResultsField, value) != true)) {
                    this.TestResultsField = value;
                    this.RaisePropertyChanged("TestResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathologyTestReport", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class PathologyTestReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType OverallTestResultStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType PathologyDisciplineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SpecimenCollectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType TestResultNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType OverallTestResultStatus {
            get {
                return this.OverallTestResultStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OverallTestResultStatusField, value) != true)) {
                    this.OverallTestResultStatusField = value;
                    this.RaisePropertyChanged("OverallTestResultStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType PathologyDiscipline {
            get {
                return this.PathologyDisciplineField;
            }
            set {
                if ((object.ReferenceEquals(this.PathologyDisciplineField, value) != true)) {
                    this.PathologyDisciplineField = value;
                    this.RaisePropertyChanged("PathologyDiscipline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime SpecimenCollectionDate {
            get {
                return this.SpecimenCollectionDateField;
            }
            set {
                if ((this.SpecimenCollectionDateField.Equals(value) != true)) {
                    this.SpecimenCollectionDateField = value;
                    this.RaisePropertyChanged("SpecimenCollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType TestResultName {
            get {
                return this.TestResultNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TestResultNameField, value) != true)) {
                    this.TestResultNameField = value;
                    this.RaisePropertyChanged("TestResultName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticImagingReport", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class DiagnosticImagingReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT ClinicalDocumentAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAvailableToConsumerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ImagingExaminationResult[] ImagingExaminationResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.RequesterInformationDT ImagingRequesterInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DiagnosticReportInformationDT ReportInformationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ProviderInformationDT ClinicalDocumentAuthor {
            get {
                return this.ClinicalDocumentAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalDocumentAuthorField, value) != true)) {
                    this.ClinicalDocumentAuthorField = value;
                    this.RaisePropertyChanged("ClinicalDocumentAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateAvailableToConsumer {
            get {
                return this.DateAvailableToConsumerField;
            }
            set {
                if ((this.DateAvailableToConsumerField.Equals(value) != true)) {
                    this.DateAvailableToConsumerField = value;
                    this.RaisePropertyChanged("DateAvailableToConsumer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ImagingExaminationResult[] ImagingExaminationResult {
            get {
                return this.ImagingExaminationResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagingExaminationResultField, value) != true)) {
                    this.ImagingExaminationResultField = value;
                    this.RaisePropertyChanged("ImagingExaminationResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.RequesterInformationDT ImagingRequesterInformation {
            get {
                return this.ImagingRequesterInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagingRequesterInformationField, value) != true)) {
                    this.ImagingRequesterInformationField = value;
                    this.RaisePropertyChanged("ImagingRequesterInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DiagnosticReportInformationDT ReportInformation {
            get {
                return this.ReportInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportInformationField, value) != true)) {
                    this.ReportInformationField = value;
                    this.RaisePropertyChanged("ReportInformation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImagingExaminationResult", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ImagingExaminationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AnatomicalSiteDetails[] AnatomicalSiteDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ExaminationResultNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageLocationInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ImagingServiceDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ModalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType OverallTestResultStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AnatomicalSiteDetails[] AnatomicalSiteDetails {
            get {
                return this.AnatomicalSiteDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnatomicalSiteDetailsField, value) != true)) {
                    this.AnatomicalSiteDetailsField = value;
                    this.RaisePropertyChanged("AnatomicalSiteDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType ExaminationResultName {
            get {
                return this.ExaminationResultNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminationResultNameField, value) != true)) {
                    this.ExaminationResultNameField = value;
                    this.RaisePropertyChanged("ExaminationResultName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ImageLocationInformation {
            get {
                return this.ImageLocationInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageLocationInformationField, value) != true)) {
                    this.ImageLocationInformationField = value;
                    this.RaisePropertyChanged("ImageLocationInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime ImagingServiceDateTime {
            get {
                return this.ImagingServiceDateTimeField;
            }
            set {
                if ((this.ImagingServiceDateTimeField.Equals(value) != true)) {
                    this.ImagingServiceDateTimeField = value;
                    this.RaisePropertyChanged("ImagingServiceDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType OverallTestResultStatus {
            get {
                return this.OverallTestResultStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OverallTestResultStatusField, value) != true)) {
                    this.OverallTestResultStatusField = value;
                    this.RaisePropertyChanged("OverallTestResultStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthRecordOverview", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class HealthRecordOverview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.NewDocuments NewDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Link[] OtherLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.RecentDocuments RecentDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.SharedHealthSummary SharedHealthSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ViewMetaData ViewMetaDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.NewDocuments NewDocuments {
            get {
                return this.NewDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDocumentsField, value) != true)) {
                    this.NewDocumentsField = value;
                    this.RaisePropertyChanged("NewDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Link[] OtherLinks {
            get {
                return this.OtherLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherLinksField, value) != true)) {
                    this.OtherLinksField = value;
                    this.RaisePropertyChanged("OtherLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.RecentDocuments RecentDocuments {
            get {
                return this.RecentDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecentDocumentsField, value) != true)) {
                    this.RecentDocumentsField = value;
                    this.RaisePropertyChanged("RecentDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.SharedHealthSummary SharedHealthSummary {
            get {
                return this.SharedHealthSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SharedHealthSummaryField, value) != true)) {
                    this.SharedHealthSummaryField = value;
                    this.RaisePropertyChanged("SharedHealthSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ViewMetaData ViewMetaData {
            get {
                return this.ViewMetaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewMetaDataField, value) != true)) {
                    this.ViewMetaDataField = value;
                    this.RaisePropertyChanged("ViewMetaData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderInformationDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class ProviderInformationDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.NameTypeDT HealthcareProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthcareProviderOrganisationIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthcareProviderOrganisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string healthcareProviderIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string healthcareProviderRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.NameTypeDT HealthcareProviderName {
            get {
                return this.HealthcareProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthcareProviderNameField, value) != true)) {
                    this.HealthcareProviderNameField = value;
                    this.RaisePropertyChanged("HealthcareProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HealthcareProviderOrganisationIdentifier {
            get {
                return this.HealthcareProviderOrganisationIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthcareProviderOrganisationIdentifierField, value) != true)) {
                    this.HealthcareProviderOrganisationIdentifierField = value;
                    this.RaisePropertyChanged("HealthcareProviderOrganisationIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HealthcareProviderOrganisationName {
            get {
                return this.HealthcareProviderOrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthcareProviderOrganisationNameField, value) != true)) {
                    this.HealthcareProviderOrganisationNameField = value;
                    this.RaisePropertyChanged("HealthcareProviderOrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string healthcareProviderIdentifier {
            get {
                return this.healthcareProviderIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.healthcareProviderIdentifierField, value) != true)) {
                    this.healthcareProviderIdentifierField = value;
                    this.RaisePropertyChanged("healthcareProviderIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string healthcareProviderRole {
            get {
                return this.healthcareProviderRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.healthcareProviderRoleField, value) != true)) {
                    this.healthcareProviderRoleField = value;
                    this.RaisePropertyChanged("healthcareProviderRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameTypeDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class NameTypeDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NameSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NameTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] NameSuffix {
            get {
                return this.NameSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSuffixField, value) != true)) {
                    this.NameSuffixField = value;
                    this.RaisePropertyChanged("NameSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] NameTitle {
            get {
                return this.NameTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameTitleField, value) != true)) {
                    this.NameTitleField = value;
                    this.RaisePropertyChanged("NameTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathologyReportInformationDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class PathologyReportInformationDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CDAeffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeAuthorisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeReportAuthoredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathologistLocalReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ReportStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime CDAeffectiveTime {
            get {
                return this.CDAeffectiveTimeField;
            }
            set {
                if ((this.CDAeffectiveTimeField.Equals(value) != true)) {
                    this.CDAeffectiveTimeField = value;
                    this.RaisePropertyChanged("CDAeffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateTimeAuthorisation {
            get {
                return this.DateTimeAuthorisationField;
            }
            set {
                if ((this.DateTimeAuthorisationField.Equals(value) != true)) {
                    this.DateTimeAuthorisationField = value;
                    this.RaisePropertyChanged("DateTimeAuthorisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateTimeReportAuthored {
            get {
                return this.DateTimeReportAuthoredField;
            }
            set {
                if ((this.DateTimeReportAuthoredField.Equals(value) != true)) {
                    this.DateTimeReportAuthoredField = value;
                    this.RaisePropertyChanged("DateTimeReportAuthored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIDField, value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentLink {
            get {
                return this.DocumentLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentLinkField, value) != true)) {
                    this.DocumentLinkField = value;
                    this.RaisePropertyChanged("DocumentLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PathologistLocalReportId {
            get {
                return this.PathologistLocalReportIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PathologistLocalReportIdField, value) != true)) {
                    this.PathologistLocalReportIdField = value;
                    this.RaisePropertyChanged("PathologistLocalReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ReportName {
            get {
                return this.ReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNameField, value) != true)) {
                    this.ReportNameField = value;
                    this.RaisePropertyChanged("ReportName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType ReportStatus {
            get {
                return this.ReportStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportStatusField, value) != true)) {
                    this.ReportStatusField = value;
                    this.RaisePropertyChanged("ReportStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodedType", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT))]
    internal partial class CodedType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeSystemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeSystemVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeSystem {
            get {
                return this.CodeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeSystemField, value) != true)) {
                    this.CodeSystemField = value;
                    this.RaisePropertyChanged("CodeSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeSystemName {
            get {
                return this.CodeSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeSystemNameField, value) != true)) {
                    this.CodeSystemNameField = value;
                    this.RaisePropertyChanged("CodeSystemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CodeSystemVersion {
            get {
                return this.CodeSystemVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeSystemVersionField, value) != true)) {
                    this.CodeSystemVersionField = value;
                    this.RaisePropertyChanged("CodeSystemVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string OriginalText {
            get {
                return this.OriginalTextField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTextField, value) != true)) {
                    this.OriginalTextField = value;
                    this.RaisePropertyChanged("OriginalText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequesterInformationDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class RequesterInformationDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.NameTypeDT ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderOrganisationIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderOrganisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestRequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DateTimeRequested {
            get {
                return this.DateTimeRequestedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeRequestedField, value) != true)) {
                    this.DateTimeRequestedField = value;
                    this.RaisePropertyChanged("DateTimeRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ProviderIdentifier {
            get {
                return this.ProviderIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderIdentifierField, value) != true)) {
                    this.ProviderIdentifierField = value;
                    this.RaisePropertyChanged("ProviderIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.NameTypeDT ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ProviderOrganisationIdentifier {
            get {
                return this.ProviderOrganisationIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderOrganisationIdentifierField, value) != true)) {
                    this.ProviderOrganisationIdentifierField = value;
                    this.RaisePropertyChanged("ProviderOrganisationIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ProviderOrganisationName {
            get {
                return this.ProviderOrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderOrganisationNameField, value) != true)) {
                    this.ProviderOrganisationNameField = value;
                    this.RaisePropertyChanged("ProviderOrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TestRequestId {
            get {
                return this.TestRequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TestRequestIdField, value) != true)) {
                    this.TestRequestIdField = value;
                    this.RaisePropertyChanged("TestRequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndividualProfile", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class IndividualProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IhiNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndigenousStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.IndividualTypeSupp IndividualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VeteranAndAdfStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string IhiNumber {
            get {
                return this.IhiNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiNumberField, value) != true)) {
                    this.IhiNumberField = value;
                    this.RaisePropertyChanged("IhiNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string IndigenousStatus {
            get {
                return this.IndigenousStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.IndigenousStatusField, value) != true)) {
                    this.IndigenousStatusField = value;
                    this.RaisePropertyChanged("IndigenousStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.IndividualTypeSupp Individual {
            get {
                return this.IndividualField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualField, value) != true)) {
                    this.IndividualField = value;
                    this.RaisePropertyChanged("Individual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string VeteranAndAdfStatus {
            get {
                return this.VeteranAndAdfStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.VeteranAndAdfStatusField, value) != true)) {
                    this.VeteranAndAdfStatusField = value;
                    this.RaisePropertyChanged("VeteranAndAdfStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndividualTypeSupp", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class IndividualTypeSupp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.NameTypeSupp NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.NameTypeSupp Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameTypeSupp", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class NameTypeSupp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionalUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConditionalUseSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameSuffixSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameTitleSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreferredSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsageSpecifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ConditionalUse {
            get {
                return this.ConditionalUseField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionalUseField, value) != true)) {
                    this.ConditionalUseField = value;
                    this.RaisePropertyChanged("ConditionalUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool ConditionalUseSpecified {
            get {
                return this.ConditionalUseSpecifiedField;
            }
            set {
                if ((this.ConditionalUseSpecifiedField.Equals(value) != true)) {
                    this.ConditionalUseSpecifiedField = value;
                    this.RaisePropertyChanged("ConditionalUseSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string[] GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NameSuffix {
            get {
                return this.NameSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSuffixField, value) != true)) {
                    this.NameSuffixField = value;
                    this.RaisePropertyChanged("NameSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool NameSuffixSpecified {
            get {
                return this.NameSuffixSpecifiedField;
            }
            set {
                if ((this.NameSuffixSpecifiedField.Equals(value) != true)) {
                    this.NameSuffixSpecifiedField = value;
                    this.RaisePropertyChanged("NameSuffixSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NameTitle {
            get {
                return this.NameTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameTitleField, value) != true)) {
                    this.NameTitleField = value;
                    this.RaisePropertyChanged("NameTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool NameTitleSpecified {
            get {
                return this.NameTitleSpecifiedField;
            }
            set {
                if ((this.NameTitleSpecifiedField.Equals(value) != true)) {
                    this.NameTitleSpecifiedField = value;
                    this.RaisePropertyChanged("NameTitleSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Preferred {
            get {
                return this.PreferredField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredField, value) != true)) {
                    this.PreferredField = value;
                    this.RaisePropertyChanged("Preferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool PreferredSpecified {
            get {
                return this.PreferredSpecifiedField;
            }
            set {
                if ((this.PreferredSpecifiedField.Equals(value) != true)) {
                    this.PreferredSpecifiedField = value;
                    this.RaisePropertyChanged("PreferredSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool UsageSpecified {
            get {
                return this.UsageSpecifiedField;
            }
            set {
                if ((this.UsageSpecifiedField.Equals(value) != true)) {
                    this.UsageSpecifiedField = value;
                    this.RaisePropertyChanged("UsageSpecified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnatomicalSiteDetails", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class AnatomicalSiteDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AnatomicalLocation[] AnatomicalLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType AnatomicalRegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AnatomicalLocation[] AnatomicalLocation {
            get {
                return this.AnatomicalLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.AnatomicalLocationField, value) != true)) {
                    this.AnatomicalLocationField = value;
                    this.RaisePropertyChanged("AnatomicalLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType AnatomicalRegion {
            get {
                return this.AnatomicalRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.AnatomicalRegionField, value) != true)) {
                    this.AnatomicalRegionField = value;
                    this.RaisePropertyChanged("AnatomicalRegion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnatomicalLocation", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class AnatomicalLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType AnatomicalLocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType LateralityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType AnatomicalLocationName {
            get {
                return this.AnatomicalLocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AnatomicalLocationNameField, value) != true)) {
                    this.AnatomicalLocationNameField = value;
                    this.RaisePropertyChanged("AnatomicalLocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType Laterality {
            get {
                return this.LateralityField;
            }
            set {
                if ((object.ReferenceEquals(this.LateralityField, value) != true)) {
                    this.LateralityField = value;
                    this.RaisePropertyChanged("Laterality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticReportInformationDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class DiagnosticReportInformationDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CDAeffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeAuthorisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeReportAuthoredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ReportStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AccessionNumber {
            get {
                return this.AccessionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNumberField, value) != true)) {
                    this.AccessionNumberField = value;
                    this.RaisePropertyChanged("AccessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CDAeffectiveTime {
            get {
                return this.CDAeffectiveTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CDAeffectiveTimeField, value) != true)) {
                    this.CDAeffectiveTimeField = value;
                    this.RaisePropertyChanged("CDAeffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DateTimeAuthorisation {
            get {
                return this.DateTimeAuthorisationField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeAuthorisationField, value) != true)) {
                    this.DateTimeAuthorisationField = value;
                    this.RaisePropertyChanged("DateTimeAuthorisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DateTimeReportAuthored {
            get {
                return this.DateTimeReportAuthoredField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeReportAuthoredField, value) != true)) {
                    this.DateTimeReportAuthoredField = value;
                    this.RaisePropertyChanged("DateTimeReportAuthored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIdField, value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentLink {
            get {
                return this.DocumentLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentLinkField, value) != true)) {
                    this.DocumentLinkField = value;
                    this.RaisePropertyChanged("DocumentLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ReportDescription {
            get {
                return this.ReportDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportDescriptionField, value) != true)) {
                    this.ReportDescriptionField = value;
                    this.RaisePropertyChanged("ReportDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType ReportStatus {
            get {
                return this.ReportStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportStatusField, value) != true)) {
                    this.ReportStatusField = value;
                    this.RaisePropertyChanged("ReportStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewDocuments", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class NewDocuments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DocumentDT[] documentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool informationAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DocumentDT[] document {
            get {
                return this.documentField;
            }
            set {
                if ((object.ReferenceEquals(this.documentField, value) != true)) {
                    this.documentField = value;
                    this.RaisePropertyChanged("document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool informationAvailable {
            get {
                return this.informationAvailableField;
            }
            set {
                if ((this.informationAvailableField.Equals(value) != true)) {
                    this.informationAvailableField = value;
                    this.RaisePropertyChanged("informationAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class DocumentDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClinicalSynopsisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentAuthorOrganisationIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentAuthorOrganisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentAuthorPersonIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.NameTypeDT DocumentAuthorPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentAuthorRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType DocumentTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ClinicalSynopsis {
            get {
                return this.ClinicalSynopsisField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalSynopsisField, value) != true)) {
                    this.ClinicalSynopsisField = value;
                    this.RaisePropertyChanged("ClinicalSynopsis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentAuthorOrganisationIdentifier {
            get {
                return this.DocumentAuthorOrganisationIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentAuthorOrganisationIdentifierField, value) != true)) {
                    this.DocumentAuthorOrganisationIdentifierField = value;
                    this.RaisePropertyChanged("DocumentAuthorOrganisationIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentAuthorOrganisationName {
            get {
                return this.DocumentAuthorOrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentAuthorOrganisationNameField, value) != true)) {
                    this.DocumentAuthorOrganisationNameField = value;
                    this.RaisePropertyChanged("DocumentAuthorOrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentAuthorPersonIdentifier {
            get {
                return this.DocumentAuthorPersonIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentAuthorPersonIdentifierField, value) != true)) {
                    this.DocumentAuthorPersonIdentifierField = value;
                    this.RaisePropertyChanged("DocumentAuthorPersonIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.NameTypeDT DocumentAuthorPersonName {
            get {
                return this.DocumentAuthorPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentAuthorPersonNameField, value) != true)) {
                    this.DocumentAuthorPersonNameField = value;
                    this.RaisePropertyChanged("DocumentAuthorPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentAuthorRole {
            get {
                return this.DocumentAuthorRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentAuthorRoleField, value) != true)) {
                    this.DocumentAuthorRoleField = value;
                    this.RaisePropertyChanged("DocumentAuthorRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentLink {
            get {
                return this.DocumentLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentLinkField, value) != true)) {
                    this.DocumentLinkField = value;
                    this.RaisePropertyChanged("DocumentLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType DocumentTypeCode {
            get {
                return this.DocumentTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeCodeField, value) != true)) {
                    this.DocumentTypeCodeField = value;
                    this.RaisePropertyChanged("DocumentTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentTypeName {
            get {
                return this.DocumentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeNameField, value) != true)) {
                    this.DocumentTypeNameField = value;
                    this.RaisePropertyChanged("DocumentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime EffectiveDateTime {
            get {
                return this.EffectiveDateTimeField;
            }
            set {
                if ((this.EffectiveDateTimeField.Equals(value) != true)) {
                    this.EffectiveDateTimeField = value;
                    this.RaisePropertyChanged("EffectiveDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Link", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class Link : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InformationAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.LinkType LinkTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((this.InformationAvailableField.Equals(value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LinkName {
            get {
                return this.LinkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkNameField, value) != true)) {
                    this.LinkNameField = value;
                    this.RaisePropertyChanged("LinkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LinkTarget {
            get {
                return this.LinkTargetField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkTargetField, value) != true)) {
                    this.LinkTargetField = value;
                    this.RaisePropertyChanged("LinkTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LinkTitle {
            get {
                return this.LinkTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkTitleField, value) != true)) {
                    this.LinkTitleField = value;
                    this.RaisePropertyChanged("LinkTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.LinkType LinkType {
            get {
                return this.LinkTypeField;
            }
            set {
                if ((this.LinkTypeField.Equals(value) != true)) {
                    this.LinkTypeField = value;
                    this.RaisePropertyChanged("LinkType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkType", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    internal enum LinkType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        View = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecentDocuments", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class RecentDocuments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.DocumentDT[] DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InformationAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.DocumentDT[] Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((this.InformationAvailableField.Equals(value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedHealthSummary", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class SharedHealthSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InformationAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.SharedHealthSummaryAtomicData SharedHealthSummaryAtomicDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((this.InformationAvailableField.Equals(value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.SharedHealthSummaryAtomicData SharedHealthSummaryAtomicData {
            get {
                return this.SharedHealthSummaryAtomicDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SharedHealthSummaryAtomicDataField, value) != true)) {
                    this.SharedHealthSummaryAtomicDataField = value;
                    this.RaisePropertyChanged("SharedHealthSummaryAtomicData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedHealthSummaryAtomicData", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class SharedHealthSummaryAtomicData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AdverseReactionsList AdvReactionsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CdaDocumentTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Entitlement[] EntitlementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ImmunisationList ImmunisationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.MedicalHistoryList MedHistoryListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.MedicinesList MedicinesListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AddressTypeDT ShsAuthorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ContactDetailsDT[] ShsAuthorContactDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ShsAuthorDesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShsAuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.NameTypeDT ShsAuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AddressTypeDT ShsAuthorOrgAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ContactDetailsDT[] ShsAuthorOrgContactDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShsAuthorOrgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShsAuthorOrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ShsAuthorQualificationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AdverseReactionsList AdvReactionsList {
            get {
                return this.AdvReactionsListField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvReactionsListField, value) != true)) {
                    this.AdvReactionsListField = value;
                    this.RaisePropertyChanged("AdvReactionsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CdaDocumentTitle {
            get {
                return this.CdaDocumentTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CdaDocumentTitleField, value) != true)) {
                    this.CdaDocumentTitleField = value;
                    this.RaisePropertyChanged("CdaDocumentTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Entitlement[] Entitlements {
            get {
                return this.EntitlementsField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitlementsField, value) != true)) {
                    this.EntitlementsField = value;
                    this.RaisePropertyChanged("Entitlements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ImmunisationList ImmunisationList {
            get {
                return this.ImmunisationListField;
            }
            set {
                if ((object.ReferenceEquals(this.ImmunisationListField, value) != true)) {
                    this.ImmunisationListField = value;
                    this.RaisePropertyChanged("ImmunisationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.MedicalHistoryList MedHistoryList {
            get {
                return this.MedHistoryListField;
            }
            set {
                if ((object.ReferenceEquals(this.MedHistoryListField, value) != true)) {
                    this.MedHistoryListField = value;
                    this.RaisePropertyChanged("MedHistoryList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.MedicinesList MedicinesList {
            get {
                return this.MedicinesListField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicinesListField, value) != true)) {
                    this.MedicinesListField = value;
                    this.RaisePropertyChanged("MedicinesList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AddressTypeDT ShsAuthorAddress {
            get {
                return this.ShsAuthorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorAddressField, value) != true)) {
                    this.ShsAuthorAddressField = value;
                    this.RaisePropertyChanged("ShsAuthorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ContactDetailsDT[] ShsAuthorContactDetails {
            get {
                return this.ShsAuthorContactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorContactDetailsField, value) != true)) {
                    this.ShsAuthorContactDetailsField = value;
                    this.RaisePropertyChanged("ShsAuthorContactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType ShsAuthorDesignation {
            get {
                return this.ShsAuthorDesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorDesignationField, value) != true)) {
                    this.ShsAuthorDesignationField = value;
                    this.RaisePropertyChanged("ShsAuthorDesignation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ShsAuthorId {
            get {
                return this.ShsAuthorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorIdField, value) != true)) {
                    this.ShsAuthorIdField = value;
                    this.RaisePropertyChanged("ShsAuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.NameTypeDT ShsAuthorName {
            get {
                return this.ShsAuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorNameField, value) != true)) {
                    this.ShsAuthorNameField = value;
                    this.RaisePropertyChanged("ShsAuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AddressTypeDT ShsAuthorOrgAddress {
            get {
                return this.ShsAuthorOrgAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorOrgAddressField, value) != true)) {
                    this.ShsAuthorOrgAddressField = value;
                    this.RaisePropertyChanged("ShsAuthorOrgAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ContactDetailsDT[] ShsAuthorOrgContactDetails {
            get {
                return this.ShsAuthorOrgContactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorOrgContactDetailsField, value) != true)) {
                    this.ShsAuthorOrgContactDetailsField = value;
                    this.RaisePropertyChanged("ShsAuthorOrgContactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ShsAuthorOrgId {
            get {
                return this.ShsAuthorOrgIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorOrgIdField, value) != true)) {
                    this.ShsAuthorOrgIdField = value;
                    this.RaisePropertyChanged("ShsAuthorOrgId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ShsAuthorOrgName {
            get {
                return this.ShsAuthorOrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorOrgNameField, value) != true)) {
                    this.ShsAuthorOrgNameField = value;
                    this.RaisePropertyChanged("ShsAuthorOrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType ShsAuthorQualifications {
            get {
                return this.ShsAuthorQualificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShsAuthorQualificationsField, value) != true)) {
                    this.ShsAuthorQualificationsField = value;
                    this.RaisePropertyChanged("ShsAuthorQualifications");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdverseReactionsList", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class AdverseReactionsList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.AdverseReaction[] AdverseReactionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT InformationAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.AdverseReaction[] AdverseReactions {
            get {
                return this.AdverseReactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdverseReactionsField, value) != true)) {
                    this.AdverseReactionsField = value;
                    this.RaisePropertyChanged("AdverseReactions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationAvailableField, value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdverseReaction", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class AdverseReaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType AdverseReactionCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType[] AdverseReactionManifestationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType AdverseReactionTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType AdverseReactionCause {
            get {
                return this.AdverseReactionCauseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdverseReactionCauseField, value) != true)) {
                    this.AdverseReactionCauseField = value;
                    this.RaisePropertyChanged("AdverseReactionCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType[] AdverseReactionManifestation {
            get {
                return this.AdverseReactionManifestationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdverseReactionManifestationField, value) != true)) {
                    this.AdverseReactionManifestationField = value;
                    this.RaisePropertyChanged("AdverseReactionManifestation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType AdverseReactionType {
            get {
                return this.AdverseReactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdverseReactionTypeField, value) != true)) {
                    this.AdverseReactionTypeField = value;
                    this.RaisePropertyChanged("AdverseReactionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InformationAvailableDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class InformationAvailableDT : HIPSClient.Hips.HipsPCEHRService.CodedType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.InformationAvailableDTFlavor FlavorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlavorSpecifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.InformationAvailableDTFlavor Flavor {
            get {
                return this.FlavorField;
            }
            set {
                if ((this.FlavorField.Equals(value) != true)) {
                    this.FlavorField = value;
                    this.RaisePropertyChanged("Flavor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool FlavorSpecified {
            get {
                return this.FlavorSpecifiedField;
            }
            set {
                if ((this.FlavorSpecifiedField.Equals(value) != true)) {
                    this.FlavorSpecifiedField = value;
                    this.RaisePropertyChanged("FlavorSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InformationAvailableDTFlavor", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    internal enum InformationAvailableDTFlavor : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Problem = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Procedure = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entitlement", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class Entitlement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT EntitlementEffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitlementNumberIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType EntitlementTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT EntitlementEffectiveTime {
            get {
                return this.EntitlementEffectiveTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitlementEffectiveTimeField, value) != true)) {
                    this.EntitlementEffectiveTimeField = value;
                    this.RaisePropertyChanged("EntitlementEffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string EntitlementNumberId {
            get {
                return this.EntitlementNumberIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitlementNumberIdField, value) != true)) {
                    this.EntitlementNumberIdField = value;
                    this.RaisePropertyChanged("EntitlementNumberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType EntitlementType {
            get {
                return this.EntitlementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitlementTypeField, value) != true)) {
                    this.EntitlementTypeField = value;
                    this.RaisePropertyChanged("EntitlementType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeStampDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class TimeStampDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CentreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Centre {
            get {
                return this.CentreField;
            }
            set {
                if ((object.ReferenceEquals(this.CentreField, value) != true)) {
                    this.CentreField = value;
                    this.RaisePropertyChanged("Centre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string High {
            get {
                return this.HighField;
            }
            set {
                if ((object.ReferenceEquals(this.HighField, value) != true)) {
                    this.HighField = value;
                    this.RaisePropertyChanged("High");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Low {
            get {
                return this.LowField;
            }
            set {
                if ((object.ReferenceEquals(this.LowField, value) != true)) {
                    this.LowField = value;
                    this.RaisePropertyChanged("Low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Width {
            get {
                return this.WidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthField, value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImmunisationList", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class ImmunisationList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Immunisation[] ImmunisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT InformationAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Immunisation[] Immunisation {
            get {
                return this.ImmunisationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImmunisationField, value) != true)) {
                    this.ImmunisationField = value;
                    this.RaisePropertyChanged("Immunisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationAvailableField, value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Immunisation", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class Immunisation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT ImmunisationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImmunisationSequenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType ImmunisationTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT ImmunisationDate {
            get {
                return this.ImmunisationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ImmunisationDateField, value) != true)) {
                    this.ImmunisationDateField = value;
                    this.RaisePropertyChanged("ImmunisationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ImmunisationSequenceNumber {
            get {
                return this.ImmunisationSequenceNumberField;
            }
            set {
                if ((this.ImmunisationSequenceNumberField.Equals(value) != true)) {
                    this.ImmunisationSequenceNumberField = value;
                    this.RaisePropertyChanged("ImmunisationSequenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType ImmunisationTitle {
            get {
                return this.ImmunisationTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ImmunisationTitleField, value) != true)) {
                    this.ImmunisationTitleField = value;
                    this.RaisePropertyChanged("ImmunisationTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalHistoryList", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class MedicalHistoryList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT[] InformationAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.OtherMedicalHistory[] OtherMedicalHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.ProblemAndDiagnosis[] ProblemAndDiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Procedure[] ProcedureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT[] InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationAvailableField, value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.OtherMedicalHistory[] OtherMedicalHistory {
            get {
                return this.OtherMedicalHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherMedicalHistoryField, value) != true)) {
                    this.OtherMedicalHistoryField = value;
                    this.RaisePropertyChanged("OtherMedicalHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.ProblemAndDiagnosis[] ProblemAndDiagnosis {
            get {
                return this.ProblemAndDiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemAndDiagnosisField, value) != true)) {
                    this.ProblemAndDiagnosisField = value;
                    this.RaisePropertyChanged("ProblemAndDiagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Procedure[] Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureField, value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherMedicalHistory", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class OtherMedicalHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfOnsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfOnset {
            get {
                return this.DateOfOnsetField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfOnsetField, value) != true)) {
                    this.DateOfOnsetField = value;
                    this.RaisePropertyChanged("DateOfOnset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfResolution {
            get {
                return this.DateOfResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfResolutionField, value) != true)) {
                    this.DateOfResolutionField = value;
                    this.RaisePropertyChanged("DateOfResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProblemAndDiagnosis", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class ProblemAndDiagnosis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfOnsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfOnset {
            get {
                return this.DateOfOnsetField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfOnsetField, value) != true)) {
                    this.DateOfOnsetField = value;
                    this.RaisePropertyChanged("DateOfOnset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfResolution {
            get {
                return this.DateOfResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfResolutionField, value) != true)) {
                    this.DateOfResolutionField = value;
                    this.RaisePropertyChanged("DateOfResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Procedure", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class Procedure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfOnsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfOnset {
            get {
                return this.DateOfOnsetField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfOnsetField, value) != true)) {
                    this.DateOfOnsetField = value;
                    this.RaisePropertyChanged("DateOfOnset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.TimeStampDT DateOfResolution {
            get {
                return this.DateOfResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfResolutionField, value) != true)) {
                    this.DateOfResolutionField = value;
                    this.RaisePropertyChanged("DateOfResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicinesList", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class MedicinesList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT InformationAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.Medicine[] MedicineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.InformationAvailableDT InformationAvailable {
            get {
                return this.InformationAvailableField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationAvailableField, value) != true)) {
                    this.InformationAvailableField = value;
                    this.RaisePropertyChanged("InformationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.Medicine[] Medicine {
            get {
                return this.MedicineField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineField, value) != true)) {
                    this.MedicineField = value;
                    this.RaisePropertyChanged("Medicine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicine", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class Medicine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.MedicineDescription[] MedicineDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineDoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.CodedType MedicineTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.MedicineDescription[] MedicineDescriptions {
            get {
                return this.MedicineDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineDescriptionsField, value) != true)) {
                    this.MedicineDescriptionsField = value;
                    this.RaisePropertyChanged("MedicineDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MedicineDose {
            get {
                return this.MedicineDoseField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineDoseField, value) != true)) {
                    this.MedicineDoseField = value;
                    this.RaisePropertyChanged("MedicineDose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.CodedType MedicineTitle {
            get {
                return this.MedicineTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineTitleField, value) != true)) {
                    this.MedicineTitleField = value;
                    this.RaisePropertyChanged("MedicineTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineDescription", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class MedicineDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndicationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Indication {
            get {
                return this.IndicationField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicationField, value) != true)) {
                    this.IndicationField = value;
                    this.RaisePropertyChanged("Indication");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressTypeDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class AddressTypeDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalLocatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryAddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AdditionalLocator {
            get {
                return this.AdditionalLocatorField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalLocatorField, value) != true)) {
                    this.AdditionalLocatorField = value;
                    this.RaisePropertyChanged("AdditionalLocator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DeliveryAddressLine {
            get {
                return this.DeliveryAddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryAddressLineField, value) != true)) {
                    this.DeliveryAddressLineField = value;
                    this.RaisePropertyChanged("DeliveryAddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HouseNumber {
            get {
                return this.HouseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNumberField, value) != true)) {
                    this.HouseNumberField = value;
                    this.RaisePropertyChanged("HouseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StreetAddressLine {
            get {
                return this.StreetAddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressLineField, value) != true)) {
                    this.StreetAddressLineField = value;
                    this.RaisePropertyChanged("StreetAddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StreetNameType {
            get {
                return this.StreetNameTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameTypeField, value) != true)) {
                    this.StreetNameTypeField = value;
                    this.RaisePropertyChanged("StreetNameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitIDField, value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string UnitType {
            get {
                return this.UnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitTypeField, value) != true)) {
                    this.UnitTypeField = value;
                    this.RaisePropertyChanged("UnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string streetName {
            get {
                return this.streetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.streetNameField, value) != true)) {
                    this.streetNameField = value;
                    this.RaisePropertyChanged("streetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDetailsDT", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class ContactDetailsDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Use {
            get {
                return this.UseField;
            }
            set {
                if ((object.ReferenceEquals(this.UseField, value) != true)) {
                    this.UseField = value;
                    this.RaisePropertyChanged("Use");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewMetaData", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ServiceContracts.Common.DTO.Views")]
    [System.SerializableAttribute()]
    internal partial class ViewMetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPCEHRService.IndividualProfile IndividualProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPCEHRService.IndividualProfile IndividualProfile {
            get {
                return this.IndividualProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualProfileField, value) != true)) {
                    this.IndividualProfileField = value;
                    this.RaisePropertyChanged("IndividualProfile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.HIPS/Services/2012/01", ConfigurationName="HipsPCEHRService.IPCEHRService")]
    internal interface IPCEHRService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessEmergency", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessEmergencyResponse")]
        HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse GainAccessEmergency(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessEmergency", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessEmergencyResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse> GainAccessEmergencyAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithCode", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithCodeResponse")]
        HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse GainAccessWithCode(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, string AccessCode, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithCode", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithCodeResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse> GainAccessWithCodeAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, string AccessCode, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithOutCode", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithOutCodeResponse")]
        HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse GainAccessWithOutCode(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithOutCode", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GainAccessWithOutCodeResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse> GainAccessWithOutCodeAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetChangeHistoryView", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetChangeHistoryViewResponse")]
        HIPSClient.Hips.HipsPCEHRService.ChangeHistoryViewResponse GetChangeHistoryView(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, string documentUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetChangeHistoryView", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetChangeHistoryViewResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.ChangeHistoryViewResponse> GetChangeHistoryViewAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, string documentUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentList", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListResponse")]
        HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentList(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentList", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterDates", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterDatesResp" +
            "onse")]
        HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListFilterDates(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterDates", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterDatesResp" +
            "onse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListFilterDatesAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterStatusAnd" +
            "Dates", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterStatusAnd" +
            "DatesResponse")]
        HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListFilterStatusAndDates(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentStatus[] documentStatus, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterStatusAnd" +
            "Dates", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListFilterStatusAnd" +
            "DatesResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListFilterStatusAndDatesAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentStatus[] documentStatus, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListWithQuery", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListWithQueryRespon" +
            "se")]
        HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListWithQuery(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentQuery docQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListWithQuery", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListWithQueryRespon" +
            "se")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListWithQueryAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentQuery docQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActive", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActiveResponse")]
        HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListActive(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActive", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActiveResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListActiveAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActiveFilterDat" +
            "es", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActiveFilterDat" +
            "esResponse")]
        HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListActiveFilterDates(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActiveFilterDat" +
            "es", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetDocumentListActiveFilterDat" +
            "esResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListActiveFilterDatesAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetLocalUploadedDocument", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetLocalUploadedDocumentRespon" +
            "se")]
        HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l GetLocalUploadedDocument(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, string sourceSystemDocumentId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetLocalUploadedDocument", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetLocalUploadedDocumentRespon" +
            "se")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l> GetLocalUploadedDocumentAsync(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, string sourceSystemDocumentId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetView", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetViewResponse")]
        HIPSClient.Hips.HipsPCEHRService.ViewResponse GetView(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.ViewRequestBase request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetView", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/GetViewResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.ViewResponse> GetViewAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.ViewRequestBase request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/IsPcehrAdvertised", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/IsPcehrAdvertisedResponse")]
        HIPSClient.Hips.HipsPCEHRService.DoesPcehrExistResponse IsPcehrAdvertised(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime dateOfBirth, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/IsPcehrAdvertised", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/IsPcehrAdvertisedResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DoesPcehrExistResponse> IsPcehrAdvertisedAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime dateOfBirth, HIPSClient.Hips.HipsPCEHRService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/ListUploadedDocuments", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/ListUploadedDocumentsResponse")]
        HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentListResponse ListUploadedDocuments(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/ListUploadedDocuments", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/ListUploadedDocumentsResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentListResponse> ListUploadedDocumentsAsync(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/RefreshPatientParticipationSta" +
            "tus", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/RefreshPatientParticipationSta" +
            "tusResponse")]
        HIPSClient.Hips.HipsPCEHRService.PatientParticipationResponse RefreshPatientParticipationStatus(HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier disclosureFacility, HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption forceRefresh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/RefreshPatientParticipationSta" +
            "tus", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/RefreshPatientParticipationSta" +
            "tusResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.PatientParticipationResponse> RefreshPatientParticipationStatusAsync(HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier disclosureFacility, HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption forceRefresh);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/Remove", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/RemoveResponse")]
        HIPSClient.Hips.HipsPCEHRService.HipsResponse Remove(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, string documentSetId, HIPSClient.Hips.HipsPCEHRService.RemovalReason reason, HIPSClient.Hips.HipsPCEHRService.UserDetails user, byte[] auditInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/Remove", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/RemoveResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.HipsResponse> RemoveAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, string documentSetId, HIPSClient.Hips.HipsPCEHRService.RemovalReason reason, HIPSClient.Hips.HipsPCEHRService.UserDetails user, byte[] auditInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/RetrieveDocument", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/RetrieveDocumentResponse")]
        HIPSClient.Hips.HipsPCEHRService.DocumentResponse RetrieveDocument(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/RetrieveDocument", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/RetrieveDocumentResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentResponse> RetrieveDocumentAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/UploadOrSupersedeDocument", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/UploadOrSupersedeDocumentRespo" +
            "nse")]
        HIPSClient.Hips.HipsPCEHRService.HipsResponse UploadOrSupersedeDocument(byte[] cdaDocument, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.Attachment[] attachments, System.DateTime admissionDate, string documentFormatCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IPCEHRService/UploadOrSupersedeDocument", ReplyAction="http://schemas.HIPS/Services/2012/01/IPCEHRService/UploadOrSupersedeDocumentRespo" +
            "nse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.HipsResponse> UploadOrSupersedeDocumentAsync(byte[] cdaDocument, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.Attachment[] attachments, System.DateTime admissionDate, string documentFormatCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IPCEHRServiceChannel : HIPSClient.Hips.HipsPCEHRService.IPCEHRService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class PCEHRServiceClient : System.ServiceModel.ClientBase<HIPSClient.Hips.HipsPCEHRService.IPCEHRService>, HIPSClient.Hips.HipsPCEHRService.IPCEHRService {
        
        public PCEHRServiceClient() {
        }
        
        public PCEHRServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PCEHRServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PCEHRServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PCEHRServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse GainAccessEmergency(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GainAccessEmergency(patientIdentifier, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse> GainAccessEmergencyAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GainAccessEmergencyAsync(patientIdentifier, user);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse GainAccessWithCode(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, string AccessCode, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GainAccessWithCode(patientIdentifier, AccessCode, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse> GainAccessWithCodeAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, string AccessCode, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GainAccessWithCodeAsync(patientIdentifier, AccessCode, user);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse GainAccessWithOutCode(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GainAccessWithOutCode(patientIdentifier, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GainPcehrAccessResponse> GainAccessWithOutCodeAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GainAccessWithOutCodeAsync(patientIdentifier, user);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ChangeHistoryViewResponse GetChangeHistoryView(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, string documentUniqueId) {
            return base.Channel.GetChangeHistoryView(patientIdentifier, user, documentUniqueId);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.ChangeHistoryViewResponse> GetChangeHistoryViewAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, string documentUniqueId) {
            return base.Channel.GetChangeHistoryViewAsync(patientIdentifier, user, documentUniqueId);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentList(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GetDocumentList(patientIdentifier, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GetDocumentListAsync(patientIdentifier, user);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListFilterDates(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd) {
            return base.Channel.GetDocumentListFilterDates(patientIdentifier, user, creationTimeStart, creationTimeEnd, serviceTimeStart, serviceTimeEnd);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListFilterDatesAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd) {
            return base.Channel.GetDocumentListFilterDatesAsync(patientIdentifier, user, creationTimeStart, creationTimeEnd, serviceTimeStart, serviceTimeEnd);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListFilterStatusAndDates(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentStatus[] documentStatus, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd) {
            return base.Channel.GetDocumentListFilterStatusAndDates(patientIdentifier, user, documentStatus, creationTimeStart, creationTimeEnd, serviceTimeStart, serviceTimeEnd);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListFilterStatusAndDatesAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentStatus[] documentStatus, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd) {
            return base.Channel.GetDocumentListFilterStatusAndDatesAsync(patientIdentifier, user, documentStatus, creationTimeStart, creationTimeEnd, serviceTimeStart, serviceTimeEnd);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListWithQuery(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentQuery docQuery) {
            return base.Channel.GetDocumentListWithQuery(patientIdentifier, user, docQuery);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListWithQueryAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentQuery docQuery) {
            return base.Channel.GetDocumentListWithQueryAsync(patientIdentifier, user, docQuery);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListActive(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GetDocumentListActive(patientIdentifier, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListActiveAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.GetDocumentListActiveAsync(patientIdentifier, user);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentListResponse GetDocumentListActiveFilterDates(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd) {
            return base.Channel.GetDocumentListActiveFilterDates(patientIdentifier, user, creationTimeStart, creationTimeEnd, serviceTimeStart, serviceTimeEnd);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentListResponse> GetDocumentListActiveFilterDatesAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, System.Nullable<System.DateTime> creationTimeStart, System.Nullable<System.DateTime> creationTimeEnd, System.Nullable<System.DateTime> serviceTimeStart, System.Nullable<System.DateTime> serviceTimeEnd) {
            return base.Channel.GetDocumentListActiveFilterDatesAsync(patientIdentifier, user, creationTimeStart, creationTimeEnd, serviceTimeStart, serviceTimeEnd);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l GetLocalUploadedDocument(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, string sourceSystemDocumentId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier) {
            return base.Channel.GetLocalUploadedDocument(user, sourceSystemSetId, sourceSystemDocumentId, patientIdentifier);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentResponseOfPatientIdentifierBasea_PcM515l> GetLocalUploadedDocumentAsync(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, string sourceSystemDocumentId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier) {
            return base.Channel.GetLocalUploadedDocumentAsync(user, sourceSystemSetId, sourceSystemDocumentId, patientIdentifier);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ViewResponse GetView(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.ViewRequestBase request) {
            return base.Channel.GetView(patientIdentifier, user, request);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.ViewResponse> GetViewAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.ViewRequestBase request) {
            return base.Channel.GetViewAsync(patientIdentifier, user, request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DoesPcehrExistResponse IsPcehrAdvertised(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime dateOfBirth, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.IsPcehrAdvertised(patientIdentifier, dateOfBirth, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DoesPcehrExistResponse> IsPcehrAdvertisedAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime dateOfBirth, HIPSClient.Hips.HipsPCEHRService.UserDetails user) {
            return base.Channel.IsPcehrAdvertisedAsync(patientIdentifier, dateOfBirth, user);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentListResponse ListUploadedDocuments(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier) {
            return base.Channel.ListUploadedDocuments(user, sourceSystemSetId, patientIdentifier);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.LocalClinicalDocumentListResponse> ListUploadedDocumentsAsync(HIPSClient.Hips.HipsPCEHRService.UserDetails user, string sourceSystemSetId, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier) {
            return base.Channel.ListUploadedDocumentsAsync(user, sourceSystemSetId, patientIdentifier);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.PatientParticipationResponse RefreshPatientParticipationStatus(HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier disclosureFacility, HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption forceRefresh) {
            return base.Channel.RefreshPatientParticipationStatus(user, patientIdentifier, disclosureFacility, forceRefresh);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.PatientParticipationResponse> RefreshPatientParticipationStatusAsync(HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier disclosureFacility, HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption forceRefresh) {
            return base.Channel.RefreshPatientParticipationStatusAsync(user, patientIdentifier, disclosureFacility, forceRefresh);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.HipsResponse Remove(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, string documentSetId, HIPSClient.Hips.HipsPCEHRService.RemovalReason reason, HIPSClient.Hips.HipsPCEHRService.UserDetails user, byte[] auditInformation) {
            return base.Channel.Remove(patientIdentifier, admissionDate, documentSetId, reason, user, auditInformation);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.HipsResponse> RemoveAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, string documentSetId, HIPSClient.Hips.HipsPCEHRService.RemovalReason reason, HIPSClient.Hips.HipsPCEHRService.UserDetails user, byte[] auditInformation) {
            return base.Channel.RemoveAsync(patientIdentifier, admissionDate, documentSetId, reason, user, auditInformation);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.DocumentResponse RetrieveDocument(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentRequest request) {
            return base.Channel.RetrieveDocument(patientIdentifier, user, request);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.DocumentResponse> RetrieveDocumentAsync(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.DocumentRequest request) {
            return base.Channel.RetrieveDocumentAsync(patientIdentifier, user, request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.HipsResponse UploadOrSupersedeDocument(byte[] cdaDocument, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.Attachment[] attachments, System.DateTime admissionDate, string documentFormatCode) {
            return base.Channel.UploadOrSupersedeDocument(cdaDocument, patientIdentifier, user, attachments, admissionDate, documentFormatCode);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.HipsResponse> UploadOrSupersedeDocumentAsync(byte[] cdaDocument, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserDetails user, HIPSClient.Hips.HipsPCEHRService.Attachment[] attachments, System.DateTime admissionDate, string documentFormatCode) {
            return base.Channel.UploadOrSupersedeDocumentAsync(cdaDocument, patientIdentifier, user, attachments, admissionDate, documentFormatCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nehta.hips/2018/05/pcehr", ConfigurationName="HipsPCEHRService.IPcehrServiceV3")]
    internal interface IPcehrServiceV3 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperation", ReplyAction="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationInvalidRequestF" +
            "aultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationServiceOperatio" +
            "nFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationInvalidUserFaul" +
            "tFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationResponse GetQueuedOperation(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperation", ReplyAction="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationResponse> GetQueuedOperationAsync(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperations", ReplyAction="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationsInvalidRequest" +
            "FaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationsServiceOperati" +
            "onFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationsInvalidUserFau" +
            "ltFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsResponse GetQueuedOperations(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperations", ReplyAction="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/GetQueuedOperationsResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsResponse> GetQueuedOperationsAsync(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperations", ReplyAction="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperationsInvalidRequ" +
            "estFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperationsServiceOper" +
            "ationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperationsInvalidUser" +
            "FaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsResponse SearchQueuedOperations(HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperations", ReplyAction="http://nehta.hips/2018/05/pcehr/IPcehrServiceV3/SearchQueuedOperationsResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsResponse> SearchQueuedOperationsAsync(HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQueuedOperationRequest", WrapperNamespace="http://nehta.hips/2018/05/pcehr", IsWrapped=true)]
    internal partial class GetQueuedOperationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=0)]
        public string MessageIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        public GetQueuedOperationRequest() {
        }
        
        public GetQueuedOperationRequest(string MessageIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User) {
            this.MessageIdentifier = MessageIdentifier;
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQueuedOperationResponse", WrapperNamespace="http://nehta.hips/2018/05/pcehr", IsWrapped=true)]
    internal partial class GetQueuedOperationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.QueuedOperationQueryResult Data;
        
        public GetQueuedOperationResponse() {
        }
        
        public GetQueuedOperationResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.QueuedOperationQueryResult Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQueuedOperationsRequest", WrapperNamespace="http://nehta.hips/2018/05/pcehr", IsWrapped=true)]
    internal partial class GetQueuedOperationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=2)]
        public System.DateTime AdmissionDate;
        
        public GetQueuedOperationsRequest() {
        }
        
        public GetQueuedOperationsRequest(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime AdmissionDate) {
            this.PatientIdentifier = PatientIdentifier;
            this.User = User;
            this.AdmissionDate = AdmissionDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQueuedOperationsResponse", WrapperNamespace="http://nehta.hips/2018/05/pcehr", IsWrapped=true)]
    internal partial class GetQueuedOperationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.QueuedOperationsQueryResult Data;
        
        public GetQueuedOperationsResponse() {
        }
        
        public GetQueuedOperationsResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.QueuedOperationsQueryResult Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchQueuedOperationsRequest", WrapperNamespace="http://nehta.hips/2018/05/pcehr", IsWrapped=true)]
    internal partial class SearchQueuedOperationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=0)]
        public System.DateTime DateTimeFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=2)]
        public System.DateTime DateTimeTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=3)]
        public HIPSClient.Hips.HipsPCEHRService.QueueOperation[] QueueOperations;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=4)]
        public HIPSClient.Hips.HipsPCEHRService.MessageQueueState[] QueueStates;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=5)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1[] PatientIdentifiers;
        
        public SearchQueuedOperationsRequest() {
        }
        
        public SearchQueuedOperationsRequest(System.DateTime DateTimeFrom, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime DateTimeTo, HIPSClient.Hips.HipsPCEHRService.QueueOperation[] QueueOperations, HIPSClient.Hips.HipsPCEHRService.MessageQueueState[] QueueStates, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1[] PatientIdentifiers) {
            this.DateTimeFrom = DateTimeFrom;
            this.User = User;
            this.DateTimeTo = DateTimeTo;
            this.QueueOperations = QueueOperations;
            this.QueueStates = QueueStates;
            this.PatientIdentifiers = PatientIdentifiers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchQueuedOperationsResponse", WrapperNamespace="http://nehta.hips/2018/05/pcehr", IsWrapped=true)]
    internal partial class SearchQueuedOperationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2018/05/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation[] Data;
        
        public SearchQueuedOperationsResponse() {
        }
        
        public SearchQueuedOperationsResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation[] Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IPcehrServiceV3Channel : HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class PcehrServiceV3Client : System.ServiceModel.ClientBase<HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3>, HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3 {
        
        public PcehrServiceV3Client() {
        }
        
        public PcehrServiceV3Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PcehrServiceV3Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PcehrServiceV3Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PcehrServiceV3Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3.GetQueuedOperation(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationRequest request) {
            return base.Channel.GetQueuedOperation(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus GetQueuedOperation(string MessageIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.QueuedOperationQueryResult Data) {
            HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationRequest inValue = new HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationRequest();
            inValue.MessageIdentifier = MessageIdentifier;
            inValue.User = User;
            HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3)(this)).GetQueuedOperation(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationResponse> GetQueuedOperationAsync(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationRequest request) {
            return base.Channel.GetQueuedOperationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3.GetQueuedOperations(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsRequest request) {
            return base.Channel.GetQueuedOperations(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus GetQueuedOperations(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime AdmissionDate, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.QueuedOperationsQueryResult Data) {
            HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsRequest inValue = new HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsRequest();
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.User = User;
            inValue.AdmissionDate = AdmissionDate;
            HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3)(this)).GetQueuedOperations(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsResponse> GetQueuedOperationsAsync(HIPSClient.Hips.HipsPCEHRService.GetQueuedOperationsRequest request) {
            return base.Channel.GetQueuedOperationsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3.SearchQueuedOperations(HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsRequest request) {
            return base.Channel.SearchQueuedOperations(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus SearchQueuedOperations(System.DateTime DateTimeFrom, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime DateTimeTo, HIPSClient.Hips.HipsPCEHRService.QueueOperation[] QueueOperations, HIPSClient.Hips.HipsPCEHRService.MessageQueueState[] QueueStates, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1[] PatientIdentifiers, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.QueuedPcehrOperation[] Data) {
            HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsRequest inValue = new HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsRequest();
            inValue.DateTimeFrom = DateTimeFrom;
            inValue.User = User;
            inValue.DateTimeTo = DateTimeTo;
            inValue.QueueOperations = QueueOperations;
            inValue.QueueStates = QueueStates;
            inValue.PatientIdentifiers = PatientIdentifiers;
            HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV3)(this)).SearchQueuedOperations(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsResponse> SearchQueuedOperationsAsync(HIPSClient.Hips.HipsPCEHRService.SearchQueuedOperationsRequest request) {
            return base.Channel.SearchQueuedOperationsAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nehta.hips/2014/03/pcehr", ConfigurationName="HipsPCEHRService.IPcehrServiceV2")]
    internal interface IPcehrServiceV2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "InvalidRequestFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "ServiceOperationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "InvalidUserFaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HiServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "HiServiceFaultFault", Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "PcehrServiceFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "ItemNotFoundFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusResponse RefreshPatientParticipationStatus(HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/RefreshPatientParticipationStatus" +
            "Response")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusResponse> RefreshPatientParticipationStatusAsync(HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1A", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AInvalidRequestFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AServiceOperationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AInvalidUserFaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HiServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AHiServiceFaultFault", Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1APcehrServiceFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AItemNotFoundFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1AResponse UploadOrSupersedeDischargeSummaryLevel1A(HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1ARequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1A", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/UploadOrSupersedeDischargeSummary" +
            "Level1AResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1AResponse> UploadOrSupersedeDischargeSummaryLevel1AAsync(HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1ARequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocal", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalInvalidRequ" +
            "estFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalServiceOper" +
            "ationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalInvalidUser" +
            "FaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.HiServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalHiServiceFa" +
            "ultFault", Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalPcehrServic" +
            "eFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalItemNotFoun" +
            "dFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalResponse IsPcehrAdvertisedLocal(HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocal", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/IsPcehrAdvertisedLocalResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalResponse> IsPcehrAdvertisedLocalAsync(HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportView", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewInvalidRequ" +
            "estFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewServiceOper" +
            "ationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewInvalidUser" +
            "FaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewPcehrServic" +
            "eFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewItemNotFoun" +
            "dFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewResponse GetPathologyReportView(HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportView", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetPathologyReportViewResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewResponse> GetPathologyReportViewAsync(HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportView", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewInv" +
            "alidRequestFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewSer" +
            "viceOperationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewInv" +
            "alidUserFaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewPce" +
            "hrServiceFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewIte" +
            "mNotFoundFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewResponse GetDiagnosticImagingReportView(HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportView", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetDiagnosticImagingReportViewRes" +
            "ponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewResponse> GetDiagnosticImagingReportViewAsync(HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverview", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewInvalidReq" +
            "uestFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewServiceOpe" +
            "rationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewInvalidUse" +
            "rFaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewPcehrServi" +
            "ceFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPCEHRService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewItemNotFou" +
            "ndFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewResponse GetHealthRecordOverview(HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverview", ReplyAction="http://nehta.hips/2014/03/pcehr/IPcehrServiceV2/GetHealthRecordOverviewResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewResponse> GetHealthRecordOverviewAsync(HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RefreshPatientParticipationStatusRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class RefreshPatientParticipationStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier1 DisclosureFacility;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption1 ForceRefresh;
        
        public RefreshPatientParticipationStatusRequest() {
        }
        
        public RefreshPatientParticipationStatusRequest(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier1 DisclosureFacility, HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption1 ForceRefresh) {
            this.PatientIdentifier = PatientIdentifier;
            this.User = User;
            this.DisclosureFacility = DisclosureFacility;
            this.ForceRefresh = ForceRefresh;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RefreshPatientParticipationStatusResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class RefreshPatientParticipationStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus1 Data;
        
        public RefreshPatientParticipationStatusResponse() {
        }
        
        public RefreshPatientParticipationStatusResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus1 Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDischargeSummaryLevel1ARequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class UploadDischargeSummaryLevel1ARequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public byte[] PdfDocument;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public HIPSClient.Hips.HipsPCEHRService.CdaHeaderMetadata CdaHeaderMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=4)]
        public HIPSClient.Hips.HipsPCEHRService.CdaAttachment[] Attachments;
        
        public UploadDischargeSummaryLevel1ARequest() {
        }
        
        public UploadDischargeSummaryLevel1ARequest(byte[] PdfDocument, HIPSClient.Hips.HipsPCEHRService.UserBase User, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.CdaHeaderMetadata CdaHeaderMetadata, HIPSClient.Hips.HipsPCEHRService.CdaAttachment[] Attachments) {
            this.PdfDocument = PdfDocument;
            this.User = User;
            this.PatientIdentifier = PatientIdentifier;
            this.CdaHeaderMetadata = CdaHeaderMetadata;
            this.Attachments = Attachments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDischargeSummaryLevel1AResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class UploadDischargeSummaryLevel1AResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.CdaDocumentDetails Data;
        
        public UploadDischargeSummaryLevel1AResponse() {
        }
        
        public UploadDischargeSummaryLevel1AResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.CdaDocumentDetails Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsPcehrAdvertisedLocalRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class IsPcehrAdvertisedLocalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        public IsPcehrAdvertisedLocalRequest() {
        }
        
        public IsPcehrAdvertisedLocalRequest(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User) {
            this.PatientIdentifier = PatientIdentifier;
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsPcehrAdvertisedLocalResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class IsPcehrAdvertisedLocalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocal Data;
        
        public IsPcehrAdvertisedLocalResponse() {
        }
        
        public IsPcehrAdvertisedLocalResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocal Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPathologyReportViewRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class GetPathologyReportViewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public System.DateTime DateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public System.DateTime DateTo;
        
        public GetPathologyReportViewRequest() {
        }
        
        public GetPathologyReportViewRequest(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime DateFrom, System.DateTime DateTo) {
            this.PatientIdentifier = PatientIdentifier;
            this.User = User;
            this.DateFrom = DateFrom;
            this.DateTo = DateTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPathologyReportViewResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class GetPathologyReportViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.PathologyReport[] Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public HIPSClient.Hips.HipsPCEHRService.IndividualProfile Individual;
        
        public GetPathologyReportViewResponse() {
        }
        
        public GetPathologyReportViewResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.PathologyReport[] Data, HIPSClient.Hips.HipsPCEHRService.IndividualProfile Individual) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
            this.Individual = Individual;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiagnosticImagingReportViewRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class GetDiagnosticImagingReportViewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public System.DateTime DateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public System.DateTime DateTo;
        
        public GetDiagnosticImagingReportViewRequest() {
        }
        
        public GetDiagnosticImagingReportViewRequest(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime DateFrom, System.DateTime DateTo) {
            this.PatientIdentifier = PatientIdentifier;
            this.User = User;
            this.DateFrom = DateFrom;
            this.DateTo = DateTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiagnosticImagingReportViewResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class GetDiagnosticImagingReportViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.DiagnosticImagingReport[] Data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public HIPSClient.Hips.HipsPCEHRService.IndividualProfile Individual;
        
        public GetDiagnosticImagingReportViewResponse() {
        }
        
        public GetDiagnosticImagingReportViewResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.DiagnosticImagingReport[] Data, HIPSClient.Hips.HipsPCEHRService.IndividualProfile Individual) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
            this.Individual = Individual;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHealthRecordOverviewRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class GetHealthRecordOverviewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public int ClinicalSynopsisLength;
        
        public GetHealthRecordOverviewRequest() {
        }
        
        public GetHealthRecordOverviewRequest(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, int ClinicalSynopsisLength) {
            this.PatientIdentifier = PatientIdentifier;
            this.User = User;
            this.ClinicalSynopsisLength = ClinicalSynopsisLength;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHealthRecordOverviewResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class GetHealthRecordOverviewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPCEHRService.Message[] Messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public HIPSClient.Hips.HipsPCEHRService.HealthRecordOverview Data;
        
        public GetHealthRecordOverviewResponse() {
        }
        
        public GetHealthRecordOverviewResponse(HIPSClient.Hips.HipsPCEHRService.ResponseStatus Status, HIPSClient.Hips.HipsPCEHRService.Message[] Messages, HIPSClient.Hips.HipsPCEHRService.HealthRecordOverview Data) {
            this.Status = Status;
            this.Messages = Messages;
            this.Data = Data;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IPcehrServiceV2Channel : HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class PcehrServiceV2Client : System.ServiceModel.ClientBase<HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2>, HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2 {
        
        public PcehrServiceV2Client() {
        }
        
        public PcehrServiceV2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PcehrServiceV2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PcehrServiceV2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PcehrServiceV2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2.RefreshPatientParticipationStatus(HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusRequest request) {
            return base.Channel.RefreshPatientParticipationStatus(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus RefreshPatientParticipationStatus(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, HIPSClient.Hips.HipsPCEHRService.HospitalIdentifier1 DisclosureFacility, HIPSClient.Hips.HipsPCEHRService.ForceRefreshOption1 ForceRefresh, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.PatientParticipationStatus1 Data) {
            HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusRequest inValue = new HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusRequest();
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.User = User;
            inValue.DisclosureFacility = DisclosureFacility;
            inValue.ForceRefresh = ForceRefresh;
            HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2)(this)).RefreshPatientParticipationStatus(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusResponse> RefreshPatientParticipationStatusAsync(HIPSClient.Hips.HipsPCEHRService.RefreshPatientParticipationStatusRequest request) {
            return base.Channel.RefreshPatientParticipationStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1AResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2.UploadOrSupersedeDischargeSummaryLevel1A(HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1ARequest request) {
            return base.Channel.UploadOrSupersedeDischargeSummaryLevel1A(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus UploadOrSupersedeDischargeSummaryLevel1A(byte[] PdfDocument, HIPSClient.Hips.HipsPCEHRService.UserBase User, HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.CdaHeaderMetadata CdaHeaderMetadata, HIPSClient.Hips.HipsPCEHRService.CdaAttachment[] Attachments, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.CdaDocumentDetails Data) {
            HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1ARequest inValue = new HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1ARequest();
            inValue.PdfDocument = PdfDocument;
            inValue.User = User;
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.CdaHeaderMetadata = CdaHeaderMetadata;
            inValue.Attachments = Attachments;
            HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1AResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2)(this)).UploadOrSupersedeDischargeSummaryLevel1A(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1AResponse> UploadOrSupersedeDischargeSummaryLevel1AAsync(HIPSClient.Hips.HipsPCEHRService.UploadDischargeSummaryLevel1ARequest request) {
            return base.Channel.UploadOrSupersedeDischargeSummaryLevel1AAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2.IsPcehrAdvertisedLocal(HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalRequest request) {
            return base.Channel.IsPcehrAdvertisedLocal(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus IsPcehrAdvertisedLocal(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocal Data) {
            HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalRequest inValue = new HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalRequest();
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.User = User;
            HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2)(this)).IsPcehrAdvertisedLocal(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalResponse> IsPcehrAdvertisedLocalAsync(HIPSClient.Hips.HipsPCEHRService.IsPcehrAdvertisedLocalRequest request) {
            return base.Channel.IsPcehrAdvertisedLocalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2.GetPathologyReportView(HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewRequest request) {
            return base.Channel.GetPathologyReportView(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus GetPathologyReportView(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime DateFrom, System.DateTime DateTo, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.PathologyReport[] Data, out HIPSClient.Hips.HipsPCEHRService.IndividualProfile Individual) {
            HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewRequest inValue = new HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewRequest();
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.User = User;
            inValue.DateFrom = DateFrom;
            inValue.DateTo = DateTo;
            HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2)(this)).GetPathologyReportView(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            Individual = retVal.Individual;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewResponse> GetPathologyReportViewAsync(HIPSClient.Hips.HipsPCEHRService.GetPathologyReportViewRequest request) {
            return base.Channel.GetPathologyReportViewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2.GetDiagnosticImagingReportView(HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewRequest request) {
            return base.Channel.GetDiagnosticImagingReportView(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus GetDiagnosticImagingReportView(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, System.DateTime DateFrom, System.DateTime DateTo, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.DiagnosticImagingReport[] Data, out HIPSClient.Hips.HipsPCEHRService.IndividualProfile Individual) {
            HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewRequest inValue = new HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewRequest();
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.User = User;
            inValue.DateFrom = DateFrom;
            inValue.DateTo = DateTo;
            HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2)(this)).GetDiagnosticImagingReportView(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            Individual = retVal.Individual;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewResponse> GetDiagnosticImagingReportViewAsync(HIPSClient.Hips.HipsPCEHRService.GetDiagnosticImagingReportViewRequest request) {
            return base.Channel.GetDiagnosticImagingReportViewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewResponse HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2.GetHealthRecordOverview(HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewRequest request) {
            return base.Channel.GetHealthRecordOverview(request);
        }
        
        public HIPSClient.Hips.HipsPCEHRService.ResponseStatus GetHealthRecordOverview(HIPSClient.Hips.HipsPCEHRService.PatientIdentifierBase1 PatientIdentifier, HIPSClient.Hips.HipsPCEHRService.UserBase User, int ClinicalSynopsisLength, out HIPSClient.Hips.HipsPCEHRService.Message[] Messages, out HIPSClient.Hips.HipsPCEHRService.HealthRecordOverview Data) {
            HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewRequest inValue = new HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewRequest();
            inValue.PatientIdentifier = PatientIdentifier;
            inValue.User = User;
            inValue.ClinicalSynopsisLength = ClinicalSynopsisLength;
            HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewResponse retVal = ((HIPSClient.Hips.HipsPCEHRService.IPcehrServiceV2)(this)).GetHealthRecordOverview(inValue);
            Messages = retVal.Messages;
            Data = retVal.Data;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewResponse> GetHealthRecordOverviewAsync(HIPSClient.Hips.HipsPCEHRService.GetHealthRecordOverviewRequest request) {
            return base.Channel.GetHealthRecordOverviewAsync(request);
        }
    }
}
