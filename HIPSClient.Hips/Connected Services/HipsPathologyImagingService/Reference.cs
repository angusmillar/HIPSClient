//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIPSClient.Hips.HipsPathologyImagingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBase", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.LocalUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ProviderUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ResponsibleUser))]
    internal partial class UserBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalUser", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class LocalUser : HIPSClient.Hips.HipsPathologyImagingService.UserBase {
        
        private string DomainField;
        
        private string FamilyNameField;
        
        private string GivenNamesField;
        
        private string LoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string GivenNames {
            get {
                return this.GivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNamesField, value) != true)) {
                    this.GivenNamesField = value;
                    this.RaisePropertyChanged("GivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderUser", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ProviderUser : HIPSClient.Hips.HipsPathologyImagingService.UserBase {
        
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNamesField;
        
        private string HpiIField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string GivenNames {
            get {
                return this.GivenNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNamesField, value) != true)) {
                    this.GivenNamesField = value;
                    this.RaisePropertyChanged("GivenNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string HpiI {
            get {
                return this.HpiIField;
            }
            set {
                if ((object.ReferenceEquals(this.HpiIField, value) != true)) {
                    this.HpiIField = value;
                    this.RaisePropertyChanged("HpiI");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponsibleUser", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ResponsibleUser : HIPSClient.Hips.HipsPathologyImagingService.UserBase {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatus", Namespace="http://nehta.hips/2014/03")]
    internal enum ResponseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.UserBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.LocalUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ProviderUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ResponsibleUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.Message[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.MessageLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidRequestFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.FaultBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ServiceOperationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidUserFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.HiServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.PcehrServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ItemNotFoundFault))]
    internal partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DataField;
        
        private string DescriptionField;
        
        private HIPSClient.Hips.HipsPathologyImagingService.MessageLevel LevelField;
        
        private HIPSClient.Hips.HipsPathologyImagingService.Message[] MessagesField;
        
        private string OriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal object Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPathologyImagingService.MessageLevel Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageLevel", Namespace="http://nehta.hips/2014/03")]
    internal enum MessageLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class InvalidRequestFault : HIPSClient.Hips.HipsPathologyImagingService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsPathologyImagingService.Message[] MessagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultBase", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ServiceOperationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidUserFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.HiServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.PcehrServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ItemNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidRequestFault))]
    internal partial class FaultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FaultIdentifier {
            get {
                return this.FaultIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultIdentifierField, value) != true)) {
                    this.FaultIdentifierField = value;
                    this.RaisePropertyChanged("FaultIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ServiceOperationFault : HIPSClient.Hips.HipsPathologyImagingService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class InvalidUserFault : HIPSClient.Hips.HipsPathologyImagingService.FaultBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class HiServiceFault : HIPSClient.Hips.HipsPathologyImagingService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDescription {
            get {
                return this.ResponseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDescriptionField, value) != true)) {
                    this.ResponseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ResponseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDetails {
            get {
                return this.ResponseCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDetailsField, value) != true)) {
                    this.ResponseCodeDetailsField = value;
                    this.RaisePropertyChanged("ResponseCodeDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class PcehrServiceFault : HIPSClient.Hips.HipsPathologyImagingService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDescription {
            get {
                return this.ResponseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDescriptionField, value) != true)) {
                    this.ResponseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ResponseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ResponseCodeDetails {
            get {
                return this.ResponseCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDetailsField, value) != true)) {
                    this.ResponseCodeDetailsField = value;
                    this.RaisePropertyChanged("ResponseCodeDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
    [System.SerializableAttribute()]
    internal partial class ItemNotFoundFault : HIPSClient.Hips.HipsPathologyImagingService.FaultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualifierField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Qualifier {
            get {
                return this.QualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifierField, value) != true)) {
                    this.QualifierField = value;
                    this.RaisePropertyChanged("Qualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nehta.hips/2014/03/pcehr", ConfigurationName="HipsPathologyImagingService.IPathologyImagingService")]
    internal interface IPathologyImagingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathology", ReplyAction="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyI" +
            "nvalidRequestFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyS" +
            "erviceOperationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyI" +
            "nvalidUserFaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.HiServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyH" +
            "iServiceFaultFault", Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyP" +
            "cehrServiceFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyI" +
            "temNotFoundFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyResponse UploadOrRemovePathology(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathology", ReplyAction="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemovePathologyR" +
            "esponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyResponse> UploadOrRemovePathologyAsync(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImaging", ReplyAction="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidRequestFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingInv" +
            "alidRequestFaultFault", Name="InvalidRequestFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ServiceOperationFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingSer" +
            "viceOperationFaultFault", Name="ServiceOperationFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.InvalidUserFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingInv" +
            "alidUserFaultFault", Name="InvalidUserFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.HiServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingHiS" +
            "erviceFaultFault", Name="HiServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.PcehrServiceFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingPce" +
            "hrServiceFaultFault", Name="PcehrServiceFault", Namespace="http://nehta.hips/2014/03")]
        [System.ServiceModel.FaultContractAttribute(typeof(HIPSClient.Hips.HipsPathologyImagingService.ItemNotFoundFault), Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingIte" +
            "mNotFoundFaultFault", Name="ItemNotFoundFault", Namespace="http://nehta.hips/2014/03")]
        HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingResponse UploadOrRemoveImaging(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImaging", ReplyAction="http://nehta.hips/2014/03/pcehr/IPathologyImagingService/UploadOrRemoveImagingRes" +
            "ponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingResponse> UploadOrRemoveImagingAsync(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadOrRemovePathologyRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class UploadOrRemovePathologyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public string HL7Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPathologyImagingService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public byte[] Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public string ReportLocation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=4)]
        public string ReportID;
        
        public UploadOrRemovePathologyRequest() {
        }
        
        public UploadOrRemovePathologyRequest(string HL7Message, HIPSClient.Hips.HipsPathologyImagingService.UserBase User, byte[] Report, string ReportLocation, string ReportID) {
            this.HL7Message = HL7Message;
            this.User = User;
            this.Report = Report;
            this.ReportLocation = ReportLocation;
            this.ReportID = ReportID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadOrRemovePathologyResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class UploadOrRemovePathologyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages;
        
        public UploadOrRemovePathologyResponse() {
        }
        
        public UploadOrRemovePathologyResponse(HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus Status, HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages) {
            this.Status = Status;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadOrRemoveImagingRequest", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class UploadOrRemoveImagingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public string HL7Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPathologyImagingService.UserBase User;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=2)]
        public byte[] Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=3)]
        public string ReportLocation;
        
        public UploadOrRemoveImagingRequest() {
        }
        
        public UploadOrRemoveImagingRequest(string HL7Message, HIPSClient.Hips.HipsPathologyImagingService.UserBase User, byte[] Report, string ReportLocation) {
            this.HL7Message = HL7Message;
            this.User = User;
            this.Report = Report;
            this.ReportLocation = ReportLocation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadOrRemoveImagingResponse", WrapperNamespace="http://nehta.hips/2014/03/pcehr", IsWrapped=true)]
    internal partial class UploadOrRemoveImagingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=0)]
        public HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://nehta.hips/2014/03/pcehr", Order=1)]
        public HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages;
        
        public UploadOrRemoveImagingResponse() {
        }
        
        public UploadOrRemoveImagingResponse(HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus Status, HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages) {
            this.Status = Status;
            this.Messages = Messages;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IPathologyImagingServiceChannel : HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class PathologyImagingServiceClient : System.ServiceModel.ClientBase<HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService>, HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService {
        
        public PathologyImagingServiceClient() {
        }
        
        public PathologyImagingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PathologyImagingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PathologyImagingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PathologyImagingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyResponse HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService.UploadOrRemovePathology(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyRequest request) {
            return base.Channel.UploadOrRemovePathology(request);
        }
        
        public HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus UploadOrRemovePathology(string HL7Message, HIPSClient.Hips.HipsPathologyImagingService.UserBase User, byte[] Report, string ReportLocation, string ReportID, out HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages) {
            HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyRequest inValue = new HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyRequest();
            inValue.HL7Message = HL7Message;
            inValue.User = User;
            inValue.Report = Report;
            inValue.ReportLocation = ReportLocation;
            inValue.ReportID = ReportID;
            HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyResponse retVal = ((HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService)(this)).UploadOrRemovePathology(inValue);
            Messages = retVal.Messages;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyResponse> UploadOrRemovePathologyAsync(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemovePathologyRequest request) {
            return base.Channel.UploadOrRemovePathologyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingResponse HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService.UploadOrRemoveImaging(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingRequest request) {
            return base.Channel.UploadOrRemoveImaging(request);
        }
        
        public HIPSClient.Hips.HipsPathologyImagingService.ResponseStatus UploadOrRemoveImaging(string HL7Message, HIPSClient.Hips.HipsPathologyImagingService.UserBase User, byte[] Report, string ReportLocation, out HIPSClient.Hips.HipsPathologyImagingService.Message[] Messages) {
            HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingRequest inValue = new HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingRequest();
            inValue.HL7Message = HL7Message;
            inValue.User = User;
            inValue.Report = Report;
            inValue.ReportLocation = ReportLocation;
            HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingResponse retVal = ((HIPSClient.Hips.HipsPathologyImagingService.IPathologyImagingService)(this)).UploadOrRemoveImaging(inValue);
            Messages = retVal.Messages;
            return retVal.Status;
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingResponse> UploadOrRemoveImagingAsync(HIPSClient.Hips.HipsPathologyImagingService.UploadOrRemoveImagingRequest request) {
            return base.Channel.UploadOrRemoveImagingAsync(request);
        }
    }
}
