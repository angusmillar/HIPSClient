//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIPSClient.Hips.HipsDatabaseLoaderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    [System.SerializableAttribute()]
    internal partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorisedEmployeeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HpiIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContractedServiceProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsDatabaseLoaderService.UserRole RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string AuthorisedEmployeeUserId {
            get {
                return this.AuthorisedEmployeeUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorisedEmployeeUserIdField, value) != true)) {
                    this.AuthorisedEmployeeUserIdField = value;
                    this.RaisePropertyChanged("AuthorisedEmployeeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string HpiI {
            get {
                return this.HpiIField;
            }
            set {
                if ((object.ReferenceEquals(this.HpiIField, value) != true)) {
                    this.HpiIField = value;
                    this.RaisePropertyChanged("HpiI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool IsContractedServiceProvider {
            get {
                return this.IsContractedServiceProviderField;
            }
            set {
                if ((this.IsContractedServiceProviderField.Equals(value) != true)) {
                    this.IsContractedServiceProviderField = value;
                    this.RaisePropertyChanged("IsContractedServiceProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal HIPSClient.Hips.HipsDatabaseLoaderService.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    internal enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderIndividual = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteractiveUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorisedEmployee = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.HIPS/Services/2012/01", ConfigurationName="HipsDatabaseLoaderService.DatabaseLoaderService")]
    internal interface DatabaseLoaderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPasEvent", ReplyAction="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPasEventResponse" +
            "")]
        string NotifyPasEvent(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPasEvent", ReplyAction="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPasEventResponse" +
            "")]
        System.Threading.Tasks.Task<string> NotifyPasEventAsync(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPathEvent", ReplyAction="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPathEventRespons" +
            "e")]
        string NotifyPathEvent(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPathEvent", ReplyAction="http://schemas.HIPS/Services/2012/01/DatabaseLoaderService/NotifyPathEventRespons" +
            "e")]
        System.Threading.Tasks.Task<string> NotifyPathEventAsync(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface DatabaseLoaderServiceChannel : HIPSClient.Hips.HipsDatabaseLoaderService.DatabaseLoaderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DatabaseLoaderServiceClient : System.ServiceModel.ClientBase<HIPSClient.Hips.HipsDatabaseLoaderService.DatabaseLoaderService>, HIPSClient.Hips.HipsDatabaseLoaderService.DatabaseLoaderService {
        
        public DatabaseLoaderServiceClient() {
        }
        
        public DatabaseLoaderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseLoaderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseLoaderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseLoaderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string NotifyPasEvent(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user) {
            return base.Channel.NotifyPasEvent(messageForm, user);
        }
        
        public System.Threading.Tasks.Task<string> NotifyPasEventAsync(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user) {
            return base.Channel.NotifyPasEventAsync(messageForm, user);
        }
        
        public string NotifyPathEvent(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user) {
            return base.Channel.NotifyPathEvent(messageForm, user);
        }
        
        public System.Threading.Tasks.Task<string> NotifyPathEventAsync(string messageForm, HIPSClient.Hips.HipsDatabaseLoaderService.UserDetails user) {
            return base.Channel.NotifyPathEventAsync(messageForm, user);
        }
    }
}
