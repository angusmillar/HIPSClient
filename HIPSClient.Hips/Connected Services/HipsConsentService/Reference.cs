//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIPSClient.Hips.HipsConsentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientIdentifierBase", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsConsentService.Mrn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsConsentService.PatientMasterId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsConsentService.StatePatientId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsConsentService.ValidatedIhi))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsConsentService.Demographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIPSClient.Hips.HipsConsentService.RegisteredEnterprisePatient))]
    public partial class PatientIdentifierBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateOrganisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateOrganisationName {
            get {
                return this.AlternateOrganisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateOrganisationNameField, value) != true)) {
                    this.AlternateOrganisationNameField = value;
                    this.RaisePropertyChanged("AlternateOrganisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalCodeSystem {
            get {
                return this.HospitalCodeSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeSystemField, value) != true)) {
                    this.HospitalCodeSystemField = value;
                    this.RaisePropertyChanged("HospitalCodeSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mrn", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    public partial class Mrn : HIPSClient.Hips.HipsConsentService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientMasterId", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    public partial class PatientMasterId : HIPSClient.Hips.HipsConsentService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HospitalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HospitalId {
            get {
                return this.HospitalIdField;
            }
            set {
                if ((this.HospitalIdField.Equals(value) != true)) {
                    this.HospitalIdField = value;
                    this.RaisePropertyChanged("HospitalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatePatientId", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    public partial class StatePatientId : HIPSClient.Hips.HipsConsentService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidatedIhi", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    public partial class ValidatedIhi : HIPSClient.Hips.HipsConsentService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IhiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IhiLastValidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.IhiRecordStatus IhiRecordStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.IhiStatus IhiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.SexEnumerator SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ihi {
            get {
                return this.IhiField;
            }
            set {
                if ((object.ReferenceEquals(this.IhiField, value) != true)) {
                    this.IhiField = value;
                    this.RaisePropertyChanged("Ihi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IhiLastValidated {
            get {
                return this.IhiLastValidatedField;
            }
            set {
                if ((this.IhiLastValidatedField.Equals(value) != true)) {
                    this.IhiLastValidatedField = value;
                    this.RaisePropertyChanged("IhiLastValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.IhiRecordStatus IhiRecordStatus {
            get {
                return this.IhiRecordStatusField;
            }
            set {
                if ((this.IhiRecordStatusField.Equals(value) != true)) {
                    this.IhiRecordStatusField = value;
                    this.RaisePropertyChanged("IhiRecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.IhiStatus IhiStatus {
            get {
                return this.IhiStatusField;
            }
            set {
                if ((this.IhiStatusField.Equals(value) != true)) {
                    this.IhiStatusField = value;
                    this.RaisePropertyChanged("IhiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.SexEnumerator Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Demographic", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    public partial class Demographic : HIPSClient.Hips.HipsConsentService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DvaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareIrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.SexEnumerator SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DvaNumber {
            get {
                return this.DvaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DvaNumberField, value) != true)) {
                    this.DvaNumberField = value;
                    this.RaisePropertyChanged("DvaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicareIrn {
            get {
                return this.MedicareIrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareIrnField, value) != true)) {
                    this.MedicareIrnField = value;
                    this.RaisePropertyChanged("MedicareIrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicareNumber {
            get {
                return this.MedicareNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareNumberField, value) != true)) {
                    this.MedicareNumberField = value;
                    this.RaisePropertyChanged("MedicareNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.SexEnumerator Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisteredEnterprisePatient", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas.PatientIdentifier")]
    [System.SerializableAttribute()]
    public partial class RegisteredEnterprisePatient : HIPSClient.Hips.HipsConsentService.PatientIdentifierBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatePatientIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatePatientId {
            get {
                return this.StatePatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatePatientIdField, value) != true)) {
                    this.StatePatientIdField = value;
                    this.RaisePropertyChanged("StatePatientId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IhiRecordStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    public enum IhiRecordStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unverified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provisional = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IhiStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    public enum IhiStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deceased = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resolved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateIhi = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicatePatient = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeConflict = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceUnavailable = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MedicareDvaChangeMismatch = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemographicMismatch = 105,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SexEnumerator", Namespace="http://schemas.datacontract.org/2004/07/HIPS.PcehrDataStore.Schemas.Enumerators")]
    public enum SexEnumerator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStatedOrInadequatelyDescribed = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntersexOrIndeterminate = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorisedEmployeeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HpiIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContractedServiceProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.UserRole RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorisedEmployeeUserId {
            get {
                return this.AuthorisedEmployeeUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorisedEmployeeUserIdField, value) != true)) {
                    this.AuthorisedEmployeeUserIdField = value;
                    this.RaisePropertyChanged("AuthorisedEmployeeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HpiI {
            get {
                return this.HpiIField;
            }
            set {
                if ((object.ReferenceEquals(this.HpiIField, value) != true)) {
                    this.HpiIField = value;
                    this.RaisePropertyChanged("HpiI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContractedServiceProvider {
            get {
                return this.IsContractedServiceProviderField;
            }
            set {
                if ((this.IsContractedServiceProviderField.Equals(value) != true)) {
                    this.IsContractedServiceProviderField = value;
                    this.RaisePropertyChanged("IsContractedServiceProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderIndividual = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteractiveUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorisedEmployee = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpisodeConsentResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    [System.SerializableAttribute()]
    public partial class EpisodeConsentResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.EpisodeConsentStatus ConsentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.HipsResponse ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.EpisodeConsentStatus ConsentStatus {
            get {
                return this.ConsentStatusField;
            }
            set {
                if ((this.ConsentStatusField.Equals(value) != true)) {
                    this.ConsentStatusField = value;
                    this.RaisePropertyChanged("ConsentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.HipsResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HipsResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    [System.SerializableAttribute()]
    public partial class HipsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HipsErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.HipsResponseIndicator StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HipsErrorMessage {
            get {
                return this.HipsErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.HipsErrorMessageField, value) != true)) {
                    this.HipsErrorMessageField = value;
                    this.RaisePropertyChanged("HipsErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCodeDescription {
            get {
                return this.ResponseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDescriptionField, value) != true)) {
                    this.ResponseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ResponseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCodeDetails {
            get {
                return this.ResponseCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeDetailsField, value) != true)) {
                    this.ResponseCodeDetailsField = value;
                    this.RaisePropertyChanged("ResponseCodeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.HipsResponseIndicator Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpisodeConsentStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    public enum EpisodeConsentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoConsentRecorded = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithdrewConsent = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HipsResponseIndicator", Namespace="http://schemas.datacontract.org/2004/07/HIPS.CommonSchemas")]
    public enum HipsResponseIndicator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPatient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidHospital = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEpisode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidDocument = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidUser = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HiServiceError = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrServiceError = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIhi = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsentWithdrawn = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CouldNotAddToQueue = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidAccessCode = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemographicMismatchWarning = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnresolvedIhiAlert = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseError = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidDateOfBirth = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrServiceWarning = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrServiceUnavailable = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientUnderAge = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CouldNotFindQueueItem = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectStatePatientId = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectMrn = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnresolvedHpiiAlert = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HpiiWarningRaised = 26,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientParticipationResponse", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    [System.SerializableAttribute()]
    public partial class PatientParticipationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.PatientParticipationStatus[] PatientParticipationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.HipsResponse ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.PatientParticipationStatus[] PatientParticipationList {
            get {
                return this.PatientParticipationListField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientParticipationListField, value) != true)) {
                    this.PatientParticipationListField = value;
                    this.RaisePropertyChanged("PatientParticipationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.HipsResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientParticipationStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    [System.SerializableAttribute()]
    public partial class PatientParticipationStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.ParticipationStatus ParticipationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatePatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HIPSClient.Hips.HipsConsentService.ValidatedIhi ValidatedIhiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalCode {
            get {
                return this.HospitalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalCodeField, value) != true)) {
                    this.HospitalCodeField = value;
                    this.RaisePropertyChanged("HospitalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.ParticipationStatus ParticipationStatus {
            get {
                return this.ParticipationStatusField;
            }
            set {
                if ((this.ParticipationStatusField.Equals(value) != true)) {
                    this.ParticipationStatusField = value;
                    this.RaisePropertyChanged("ParticipationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatePatientId {
            get {
                return this.StatePatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatePatientIdField, value) != true)) {
                    this.StatePatientIdField = value;
                    this.RaisePropertyChanged("StatePatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HIPSClient.Hips.HipsConsentService.ValidatedIhi ValidatedIhi {
            get {
                return this.ValidatedIhiField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidatedIhiField, value) != true)) {
                    this.ValidatedIhiField = value;
                    this.RaisePropertyChanged("ValidatedIhi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipationStatus", Namespace="http://schemas.datacontract.org/2004/07/HIPS.ConsentSchemas")]
    public enum ParticipationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoValidIhi = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrNotAdvertised = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PcehrAdvertised = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestedUpload = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.HIPS/Services/2012/01", ConfigurationName="HipsConsentService.IConsentService")]
    public interface IConsentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/CheckConsent", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/CheckConsentResponse")]
        HIPSClient.Hips.HipsConsentService.EpisodeConsentResponse CheckConsent(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/CheckConsent", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/CheckConsentResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.EpisodeConsentResponse> CheckConsentAsync(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/GetPatientParticipationStatu" +
            "s", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/GetPatientParticipationStatu" +
            "sResponse")]
        HIPSClient.Hips.HipsConsentService.PatientParticipationResponse GetPatientParticipationStatus(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/GetPatientParticipationStatu" +
            "s", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/GetPatientParticipationStatu" +
            "sResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.PatientParticipationResponse> GetPatientParticipationStatusAsync(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/GetRecentPatientParticipatio" +
            "nStatus", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/GetRecentPatientParticipatio" +
            "nStatusResponse")]
        HIPSClient.Hips.HipsConsentService.PatientParticipationResponse GetRecentPatientParticipationStatus(System.DateTime since, string hospitalCodeSystem, HIPSClient.Hips.HipsConsentService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/GetRecentPatientParticipatio" +
            "nStatus", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/GetRecentPatientParticipatio" +
            "nStatusResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.PatientParticipationResponse> GetRecentPatientParticipationStatusAsync(System.DateTime since, string hospitalCodeSystem, HIPSClient.Hips.HipsConsentService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/RecordConsent", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/RecordConsentResponse")]
        HIPSClient.Hips.HipsConsentService.HipsResponse RecordConsent(bool consentWithdrawn, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/RecordConsent", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/RecordConsentResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.HipsResponse> RecordConsentAsync(bool consentWithdrawn, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/RecordDisclosure", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/RecordDisclosureResponse")]
        HIPSClient.Hips.HipsConsentService.HipsResponse RecordDisclosure(bool pcehrDisclosed, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.HIPS/Services/2012/01/IConsentService/RecordDisclosure", ReplyAction="http://schemas.HIPS/Services/2012/01/IConsentService/RecordDisclosureResponse")]
        System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.HipsResponse> RecordDisclosureAsync(bool pcehrDisclosed, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsentServiceChannel : HIPSClient.Hips.HipsConsentService.IConsentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsentServiceClient : System.ServiceModel.ClientBase<HIPSClient.Hips.HipsConsentService.IConsentService>, HIPSClient.Hips.HipsConsentService.IConsentService {
        
        public ConsentServiceClient() {
        }
        
        public ConsentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HIPSClient.Hips.HipsConsentService.EpisodeConsentResponse CheckConsent(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user) {
            return base.Channel.CheckConsent(patientIdentifier, admissionDate, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.EpisodeConsentResponse> CheckConsentAsync(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user) {
            return base.Channel.CheckConsentAsync(patientIdentifier, admissionDate, user);
        }
        
        public HIPSClient.Hips.HipsConsentService.PatientParticipationResponse GetPatientParticipationStatus(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user) {
            return base.Channel.GetPatientParticipationStatus(patientIdentifier, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.PatientParticipationResponse> GetPatientParticipationStatusAsync(HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user) {
            return base.Channel.GetPatientParticipationStatusAsync(patientIdentifier, user);
        }
        
        public HIPSClient.Hips.HipsConsentService.PatientParticipationResponse GetRecentPatientParticipationStatus(System.DateTime since, string hospitalCodeSystem, HIPSClient.Hips.HipsConsentService.UserDetails user) {
            return base.Channel.GetRecentPatientParticipationStatus(since, hospitalCodeSystem, user);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.PatientParticipationResponse> GetRecentPatientParticipationStatusAsync(System.DateTime since, string hospitalCodeSystem, HIPSClient.Hips.HipsConsentService.UserDetails user) {
            return base.Channel.GetRecentPatientParticipationStatusAsync(since, hospitalCodeSystem, user);
        }
        
        public HIPSClient.Hips.HipsConsentService.HipsResponse RecordConsent(bool consentWithdrawn, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation) {
            return base.Channel.RecordConsent(consentWithdrawn, patientIdentifier, admissionDate, user, auditInformation);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.HipsResponse> RecordConsentAsync(bool consentWithdrawn, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, System.DateTime admissionDate, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation) {
            return base.Channel.RecordConsentAsync(consentWithdrawn, patientIdentifier, admissionDate, user, auditInformation);
        }
        
        public HIPSClient.Hips.HipsConsentService.HipsResponse RecordDisclosure(bool pcehrDisclosed, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation) {
            return base.Channel.RecordDisclosure(pcehrDisclosed, patientIdentifier, user, auditInformation);
        }
        
        public System.Threading.Tasks.Task<HIPSClient.Hips.HipsConsentService.HipsResponse> RecordDisclosureAsync(bool pcehrDisclosed, HIPSClient.Hips.HipsConsentService.PatientIdentifierBase patientIdentifier, HIPSClient.Hips.HipsConsentService.UserDetails user, byte[] auditInformation) {
            return base.Channel.RecordDisclosureAsync(pcehrDisclosed, patientIdentifier, user, auditInformation);
        }
    }
}
